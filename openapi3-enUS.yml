openapi: 3.0.0
info:
  title: "smartabyar-smartvillage"
  version: 3.0.0
paths:

  /callback:
    get:
      operationId: callback
      x-vertx-event-bus: smartabyar-smartvillage-enUS-callback
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /logout:
    get:
      operationId: logout
      x-vertx-event-bus: smartabyar-smartvillage-enUS-logout
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /api/htm:
    get:
      operationId: searchSiteHtm
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSiteHtmResponse'
    post:
      operationId: postSiteHtm
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteHtmRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSiteHtmResponse'
    patch:
      operationId: patchSiteHtm
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteHtmRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSiteHtmResponse'
  /api/htm-import:
    put:
      operationId: putimportSiteHtm
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSiteHtmRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportSiteHtmResponse'
  /api/htm/{id}:
    get:
      operationId: getSiteHtm
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETSiteHtmResponse'
  /htm/{id}:
    get:
      operationId: searchpageSiteHtmId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteHtmResponse'
  /htm:
    get:
      operationId: searchpageSiteHtm
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteHtm
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - HTM
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteHtmResponse'
  /api/iot-node:
    get:
      operationId: searchIotNode
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchIotNodeResponse'
    patch:
      operationId: patchIotNode
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHIotNodeRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHIotNodeResponse'
    post:
      operationId: postIotNode
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTIotNodeRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTIotNodeResponse'
  /api/iot-node-import:
    put:
      operationId: putimportIotNode
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportIotNodeRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportIotNodeResponse'
  /api/iot-node/{id}:
    get:
      operationId: getIotNode
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETIotNodeResponse'
  /iot-node/{id}:
    get:
      operationId: searchpageIotNodeId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageIotNodeResponse'
  /iot-node:
    get:
      operationId: searchpageIotNode
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNode
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageIotNodeResponse'
  /api/page:
    get:
      operationId: searchSitePage
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSitePageResponse'
    post:
      operationId: postSitePage
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SitePage
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Page
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSitePageRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSitePageResponse'
    patch:
      operationId: patchSitePage
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SitePage
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSitePageRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSitePageResponse'
  /api/page-import:
    put:
      operationId: putimportSitePage
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SitePage
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSitePageRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportSitePageResponse'
  /api/page/{id}:
    get:
      operationId: getSitePage
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETSitePageResponse'
  /page/{id}:
    get:
      operationId: searchpageSitePageId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSitePageResponse'
  /page:
    get:
      operationId: searchpageSitePage
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SitePage
      description: >+
      summary: >+
      tags:
        - Page
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSitePageResponse'
  /api/system-event:
    get:
      operationId: searchSystemEvent
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SystemEvent
      description: >+
      summary: >+
      tags:
        - System Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSystemEventResponse'
    post:
      operationId: postSystemEvent
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SystemEvent
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - System Event
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSystemEventRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSystemEventResponse'
    patch:
      operationId: patchSystemEvent
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SystemEvent
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - System Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSystemEventRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSystemEventResponse'
  /api/system-event-import:
    put:
      operationId: putimportSystemEvent
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SystemEvent
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - System Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSystemEventRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportSystemEventResponse'
  /api/system-event/{id}:
    get:
      operationId: getSystemEvent
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SystemEvent
      description: >+
      summary: >+
      tags:
        - System Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETSystemEventResponse'
  /system-event/{id}:
    get:
      operationId: searchpageSystemEventId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SystemEvent
      description: >+
      summary: >+
      tags:
        - System Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSystemEventResponse'
  /system-event:
    get:
      operationId: searchpageSystemEvent
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SystemEvent
      description: >+
      summary: >+
      tags:
        - System Event
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSystemEventResponse'
  /api/traffic-light:
    get:
      operationId: searchTrafficLight
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLight
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchTrafficLightResponse'
    patch:
      operationId: patchTrafficLight
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLight
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHTrafficLightRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHTrafficLightResponse'
    post:
      operationId: postTrafficLight
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLight
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTTrafficLightRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTTrafficLightResponse'
  /api/traffic-light-import:
    put:
      operationId: putimportTrafficLight
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLight
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportTrafficLightRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportTrafficLightResponse'
  /api/traffic-light/{id}:
    get:
      operationId: getTrafficLight
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLight
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETTrafficLightResponse'
  /traffic-light/{id}:
    get:
      operationId: searchpageTrafficLightId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLight
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageTrafficLightResponse'
  /traffic-light:
    get:
      operationId: searchpageTrafficLight
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLight
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageTrafficLightResponse'
  /api/traffic-light-step:
    get:
      operationId: searchTrafficLightStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLightStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchTrafficLightStepResponse'
    patch:
      operationId: patchTrafficLightStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLightStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHTrafficLightStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHTrafficLightStepResponse'
    post:
      operationId: postTrafficLightStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLightStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTTrafficLightStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTTrafficLightStepResponse'
  /api/traffic-light-step-import:
    put:
      operationId: putimportTrafficLightStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLightStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportTrafficLightStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportTrafficLightStepResponse'
  /api/traffic-light-step/{id}:
    get:
      operationId: getTrafficLightStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLightStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETTrafficLightStepResponse'
  /traffic-light-step/{id}:
    get:
      operationId: searchpageTrafficLightStepId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLightStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageTrafficLightStepResponse'
  /traffic-light-step:
    get:
      operationId: searchpageTrafficLightStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficLightStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Light
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageTrafficLightStepResponse'
  /api/person-step:
    get:
      operationId: searchPersonStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-PersonStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Person Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPersonStepResponse'
    patch:
      operationId: patchPersonStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-PersonStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Person Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHPersonStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHPersonStepResponse'
    post:
      operationId: postPersonStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-PersonStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Person Step
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTPersonStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTPersonStepResponse'
  /api/person-step-import:
    put:
      operationId: putimportPersonStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-PersonStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Person Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportPersonStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportPersonStepResponse'
  /api/person-step/{id}:
    get:
      operationId: getPersonStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-PersonStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Person Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETPersonStepResponse'
  /person-step/{id}:
    get:
      operationId: searchpagePersonStepId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-PersonStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Person Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPagePersonStepResponse'
  /person-step:
    get:
      operationId: searchpagePersonStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-PersonStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Person Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPagePersonStepResponse'
  /api/traffic-simulation:
    get:
      operationId: searchTrafficSimulation
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficSimulation
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Simulation
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchTrafficSimulationResponse'
    patch:
      operationId: patchTrafficSimulation
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficSimulation
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Simulation
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHTrafficSimulationRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHTrafficSimulationResponse'
    post:
      operationId: postTrafficSimulation
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficSimulation
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Simulation
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTTrafficSimulationRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTTrafficSimulationResponse'
  /api/traffic-simulation-import:
    put:
      operationId: putimportTrafficSimulation
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficSimulation
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Simulation
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportTrafficSimulationRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportTrafficSimulationResponse'
  /api/traffic-simulation/{id}:
    get:
      operationId: getTrafficSimulation
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficSimulation
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Simulation
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETTrafficSimulationResponse'
  /traffic-simulation/{id}:
    get:
      operationId: searchpageTrafficSimulationId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficSimulation
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Simulation
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageTrafficSimulationResponse'
  /traffic-simulation:
    get:
      operationId: searchpageTrafficSimulation
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficSimulation
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Simulation
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageTrafficSimulationResponse'
  /traffic-simulation-map/{id}:
    get:
      operationId: mapsearchpageTrafficSimulationId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficSimulation
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Simulation
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MapSearchPageTrafficSimulationResponse'
  /traffic-simulation-map:
    get:
      operationId: mapsearchpageTrafficSimulation
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TrafficSimulation
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Traffic Simulation
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MapSearchPageTrafficSimulationResponse'
  /api/time-step:
    get:
      operationId: searchTimeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TimeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Time Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchTimeStepResponse'
    patch:
      operationId: patchTimeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TimeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Time Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHTimeStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHTimeStepResponse'
    post:
      operationId: postTimeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TimeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Time Step
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTTimeStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTTimeStepResponse'
  /api/time-step-import:
    put:
      operationId: putimportTimeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TimeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Time Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportTimeStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportTimeStepResponse'
  /api/time-step/{id}:
    get:
      operationId: getTimeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TimeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Time Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETTimeStepResponse'
  /time-step/{id}:
    get:
      operationId: searchpageTimeStepId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TimeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Time Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageTimeStepResponse'
  /time-step:
    get:
      operationId: searchpageTimeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-TimeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Time Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageTimeStepResponse'
  /api/vehicle-step:
    get:
      operationId: searchVehicleStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-VehicleStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Vehicle Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchVehicleStepResponse'
    patch:
      operationId: patchVehicleStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-VehicleStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Vehicle Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHVehicleStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHVehicleStepResponse'
    post:
      operationId: postVehicleStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-VehicleStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Vehicle Step
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTVehicleStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTVehicleStepResponse'
  /api/vehicle-step-import:
    put:
      operationId: putimportVehicleStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-VehicleStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Vehicle Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportVehicleStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportVehicleStepResponse'
  /api/vehicle-step/{id}:
    get:
      operationId: getVehicleStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-VehicleStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Vehicle Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETVehicleStepResponse'
  /vehicle-step/{id}:
    get:
      operationId: searchpageVehicleStepId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-VehicleStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Vehicle Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageVehicleStepResponse'
  /vehicle-step:
    get:
      operationId: searchpageVehicleStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-VehicleStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Vehicle Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageVehicleStepResponse'
  /api/user:
    get:
      operationId: searchSiteUser
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSiteUserResponse'
    patch:
      operationId: patchSiteUser
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSiteUserResponse'
    post:
      operationId: postSiteUser
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSiteUserResponse'
  /api/user-import:
    put:
      operationId: putimportSiteUser
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportSiteUserResponse'
  /user/{id}:
    get:
      operationId: searchpageSiteUserId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'
  /user:
    get:
      operationId: searchpageSiteUser
      x-vertx-event-bus: smartabyar-smartvillage-enUS-SiteUser
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'
  /api/iot-node-step:
    get:
      operationId: searchIotNodeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNodeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchIotNodeStepResponse'
    patch:
      operationId: patchIotNodeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNodeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHIotNodeStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHIotNodeStepResponse'
    post:
      operationId: postIotNodeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNodeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node Step
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTIotNodeStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTIotNodeStepResponse'
  /api/iot-node-step-import:
    put:
      operationId: putimportIotNodeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNodeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PUTImportIotNodeStepRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PUTImportIotNodeStepResponse'
  /api/iot-node-step/{id}:
    get:
      operationId: getIotNodeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNodeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETIotNodeStepResponse'
  /iot-node-step/{id}:
    get:
      operationId: searchpageIotNodeStepId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNodeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageIotNodeStepResponse'
  /iot-node-step:
    get:
      operationId: searchpageIotNodeStep
      x-vertx-event-bus: smartabyar-smartvillage-enUS-IotNodeStep
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - IOT Node Step
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageIotNodeStepResponse'
  /api/map-result:
    get:
      operationId: searchMapResult
      x-vertx-event-bus: smartabyar-smartvillage-enUS-MapResult
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Map Result
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchMapResultResponse'
  /api/map-result/{id}:
    get:
      operationId: getMapResult
      x-vertx-event-bus: smartabyar-smartvillage-enUS-MapResult
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Map Result
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GETMapResultResponse'
  /map-result/{id}:
    get:
      operationId: searchpageMapResultId
      x-vertx-event-bus: smartabyar-smartvillage-enUS-MapResult
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Map Result
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageMapResultResponse'
  /map-result:
    get:
      operationId: searchpageMapResult
      x-vertx-event-bus: smartabyar-smartvillage-enUS-MapResult
      security:
        - openIdConnect:
          - profile
      description: >+
      summary: >+
      tags:
        - Map Result
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: 'The query parameter defines a query using standard query syntax. This parameter is mandatory.'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: 'The filter query parameter defines a query that can be used to restrict the superset of documents that can be returned, without influencing score. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: var
          description: 'The var parameters are additional optional variables and values to pass into the application. '
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: fl
          description: 'The field list parameter limits the information included in a query response to a specified list of fields. '
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: 'The sort parameter arranges search results in either ascending (asc) or descending (desc) order. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: 'The start parameter specifies an offset into a query result set and instructs Solr to begin displaying results from this offset. '
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: 'The rows parameter specifies the maximum number of documents from the complete result set that Solr should return to the client at one time. '
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: facet
          description: 'The facet parameter enables facet counts in the query response. '
          required: false
          schema:
            type: boolean
        - in: query
          name: facet.range.start
          description: 'The facet.range.start parameter specifies the lower bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: 'The facet.range.end specifies the upper bound of the ranges. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: 'The span of each range expressed as a value to be added to the lower bound. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: 'The facet.pivot parameter defines the fields to use for the pivot. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: 'The facet.range parameter defines the field for which Solr should create range facets. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: 'The facet.field parameter identifies a field that should be treated as a facet. '
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: d
          description: 'The radial distance, usually in kilometers. '
          required: false
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pt
          description: 'he center point using the format lat,lon if latitude & longitude. Otherwise, x,y for PointType or x y for RPT field types. '
          required: false
          schema:
            type: string
        - in: query
          name: sfield
          description: 'A spatial indexed field. '
          required: false
          schema:
            type: string
        - in: query
          name: score
          description: '(Advanced option; not supported by LatLonType (deprecated) or PointType) If the query is used in a scoring context (e.g., as the main query in q), this local parameter determines what scores will be produced. Valid values are: none, kilometers, miles, degrees, distance, recipDistance, overlapRatio, area, area2D'
          required: false
          schema:
            type: string
        - in: query
          name: distanceUnits
          description: 'This is used to specify the units for distance measurements used throughout the use of this field. This can be degrees, kilometers or miles. '
          required: false
          schema:
            type: string
        - in: query
          name: stats
          description: 'The Stats component returns simple statistics for numeric, string, and date fields within the document set. '
          required: false
          schema:
            type: boolean
        - in: query
          name: stats.field
          description: 'Specifies a field for which statistics should be generated. '
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageMapResultResponse'
components:
  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://sso.computate.org/auth/realms/RH-IMPACT/.well-known/openid-configuration
  requestBodies:
    SearchSiteHtmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteHtmResponse'
    POSTSiteHtmRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteHtmRequest'
    POSTSiteHtmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteHtmResponse'
    PATCHSiteHtmRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteHtmRequest'
    PATCHSiteHtmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteHtmResponse'
    PUTImportSiteHtmRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSiteHtmRequest'
    PUTImportSiteHtmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSiteHtmResponse'
    GETSiteHtmResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSiteHtmResponse'
    SearchPageSiteHtmResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteHtmResponse'
    SearchIotNodeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchIotNodeResponse'
    PATCHIotNodeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHIotNodeRequest'
    PATCHIotNodeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHIotNodeResponse'
    POSTIotNodeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTIotNodeRequest'
    POSTIotNodeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTIotNodeResponse'
    PUTImportIotNodeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportIotNodeRequest'
    PUTImportIotNodeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportIotNodeResponse'
    GETIotNodeResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETIotNodeResponse'
    SearchPageIotNodeResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageIotNodeResponse'
    SearchSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSitePageResponse'
    POSTSitePageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSitePageRequest'
    POSTSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSitePageResponse'
    PATCHSitePageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSitePageRequest'
    PATCHSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSitePageResponse'
    PUTImportSitePageRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSitePageRequest'
    PUTImportSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSitePageResponse'
    GETSitePageResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSitePageResponse'
    SearchPageSitePageResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSitePageResponse'
    SearchSystemEventResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSystemEventResponse'
    POSTSystemEventRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSystemEventRequest'
    POSTSystemEventResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSystemEventResponse'
    PATCHSystemEventRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSystemEventRequest'
    PATCHSystemEventResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSystemEventResponse'
    PUTImportSystemEventRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSystemEventRequest'
    PUTImportSystemEventResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSystemEventResponse'
    GETSystemEventResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETSystemEventResponse'
    SearchPageSystemEventResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSystemEventResponse'
    SearchTrafficLightResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchTrafficLightResponse'
    PATCHTrafficLightRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHTrafficLightRequest'
    PATCHTrafficLightResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHTrafficLightResponse'
    POSTTrafficLightRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTTrafficLightRequest'
    POSTTrafficLightResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTTrafficLightResponse'
    PUTImportTrafficLightRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficLightRequest'
    PUTImportTrafficLightResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficLightResponse'
    GETTrafficLightResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETTrafficLightResponse'
    SearchPageTrafficLightResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageTrafficLightResponse'
    SearchTrafficLightStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchTrafficLightStepResponse'
    PATCHTrafficLightStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHTrafficLightStepRequest'
    PATCHTrafficLightStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHTrafficLightStepResponse'
    POSTTrafficLightStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTTrafficLightStepRequest'
    POSTTrafficLightStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTTrafficLightStepResponse'
    PUTImportTrafficLightStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficLightStepRequest'
    PUTImportTrafficLightStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficLightStepResponse'
    GETTrafficLightStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETTrafficLightStepResponse'
    SearchPageTrafficLightStepResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageTrafficLightStepResponse'
    SearchPersonStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPersonStepResponse'
    PATCHPersonStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHPersonStepRequest'
    PATCHPersonStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHPersonStepResponse'
    POSTPersonStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTPersonStepRequest'
    POSTPersonStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTPersonStepResponse'
    PUTImportPersonStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportPersonStepRequest'
    PUTImportPersonStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportPersonStepResponse'
    GETPersonStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETPersonStepResponse'
    SearchPagePersonStepResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPagePersonStepResponse'
    SearchTrafficSimulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchTrafficSimulationResponse'
    PATCHTrafficSimulationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHTrafficSimulationRequest'
    PATCHTrafficSimulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHTrafficSimulationResponse'
    POSTTrafficSimulationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTTrafficSimulationRequest'
    POSTTrafficSimulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTTrafficSimulationResponse'
    PUTImportTrafficSimulationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficSimulationRequest'
    PUTImportTrafficSimulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportTrafficSimulationResponse'
    GETTrafficSimulationResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETTrafficSimulationResponse'
    SearchPageTrafficSimulationResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageTrafficSimulationResponse'
    MapSearchPageTrafficSimulationResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/MapSearchPageTrafficSimulationResponse'
    SearchTimeStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchTimeStepResponse'
    PATCHTimeStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHTimeStepRequest'
    PATCHTimeStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHTimeStepResponse'
    POSTTimeStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTTimeStepRequest'
    POSTTimeStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTTimeStepResponse'
    PUTImportTimeStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportTimeStepRequest'
    PUTImportTimeStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportTimeStepResponse'
    GETTimeStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETTimeStepResponse'
    SearchPageTimeStepResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageTimeStepResponse'
    SearchVehicleStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchVehicleStepResponse'
    PATCHVehicleStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHVehicleStepRequest'
    PATCHVehicleStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHVehicleStepResponse'
    POSTVehicleStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTVehicleStepRequest'
    POSTVehicleStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTVehicleStepResponse'
    PUTImportVehicleStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportVehicleStepRequest'
    PUTImportVehicleStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportVehicleStepResponse'
    GETVehicleStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETVehicleStepResponse'
    SearchPageVehicleStepResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageVehicleStepResponse'
    SearchSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteUserResponse'
    PATCHSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserRequest'
    PATCHSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserResponse'
    POSTSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteUserRequest'
    POSTSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteUserResponse'
    PUTImportSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportSiteUserRequest'
    PUTImportSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportSiteUserResponse'
    SearchPageSiteUserResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteUserResponse'
    SearchIotNodeStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchIotNodeStepResponse'
    PATCHIotNodeStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHIotNodeStepRequest'
    PATCHIotNodeStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHIotNodeStepResponse'
    POSTIotNodeStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTIotNodeStepRequest'
    POSTIotNodeStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTIotNodeStepResponse'
    PUTImportIotNodeStepRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PUTImportIotNodeStepRequest'
    PUTImportIotNodeStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PUTImportIotNodeStepResponse'
    GETIotNodeStepResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETIotNodeStepResponse'
    SearchPageIotNodeStepResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageIotNodeStepResponse'
    SearchMapResultResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchMapResultResponse'
    GETMapResultResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/GETMapResultResponse'
    SearchPageMapResultResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageMapResultResponse'
  schemas:
    SearchSiteHtmResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  uri:
                    type: string
                  pageId:
                    type: string
                  sequenceNum:
                    type: string
                  htmGroup:
                    type: string
                  labels:
                    type: array
                    items:
                      type: string
                  eBefore:
                    type: string
                  eAfter:
                    type: string
                  a:
                    type: object
                  text:
                    type: array
                    items:
                      type: string
                  comment:
                    type: array
                    items:
                      type: string
                  tabs:
                    type: string
                  newLine:
                    type: boolean
                  htmBefore:
                    type: string
                  htmAfter:
                    type: string
    POSTSiteHtmRequest:
      allOf:
        - type: object
          properties:
            uri:
              type: string
            pageId:
              type: string
            sequenceNum:
              type: string
            htmGroup:
              type: string
            labels:
              type: array
              items:
                type: string
            eBefore:
              type: string
            eAfter:
              type: string
            a:
              type: object
            text:
              type: array
              items:
                type: string
            comment:
              type: array
              items:
                type: string
            tabs:
              type: string
            newLine:
              type: boolean
            htmBefore:
              type: string
            htmAfter:
              type: string
    POSTSiteHtmResponse:
      allOf:
        - type: object
          properties:
            uri:
              type: string
            pageId:
              type: string
            sequenceNum:
              type: string
            htmGroup:
              type: string
            labels:
              type: array
              items:
                type: string
            eBefore:
              type: string
            eAfter:
              type: string
            a:
              type: object
            text:
              type: array
              items:
                type: string
            comment:
              type: array
              items:
                type: string
            tabs:
              type: string
            newLine:
              type: boolean
            htmBefore:
              type: string
            htmAfter:
              type: string
    PATCHSiteHtmRequest:
      allOf:
        - type: object
          properties:
            setUri:
              type: string
              nullable: true
            removeUri:
              type: string
            removeAllUri:
              type: string
            setPageId:
              type: string
              nullable: true
            removePageId:
              type: string
            removeAllPageId:
              type: string
            setSequenceNum:
              type: string
              nullable: true
            removeSequenceNum:
              type: string
            removeAllSequenceNum:
              type: string
            setHtmGroup:
              type: string
              nullable: true
            removeHtmGroup:
              type: string
            removeAllHtmGroup:
              type: string
            setLabels:
              type: array
              nullable: true
              items:
                type: string
            removeLabels:
              type: string
            removeAllLabels:
              type: array
              items:
                type: string
            addLabels:
              type: string
            addAllLabels:
              type: array
              items:
                type: string
            setEBefore:
              type: string
              nullable: true
            removeEBefore:
              type: string
            removeAllEBefore:
              type: string
            setEAfter:
              type: string
              nullable: true
            removeEAfter:
              type: string
            removeAllEAfter:
              type: string
            setA:
              type: object
              nullable: true
            removeA:
              type: object
            removeAllA:
              type: object
            setText:
              type: array
              nullable: true
              items:
                type: string
            removeText:
              type: string
            removeAllText:
              type: array
              items:
                type: string
            addText:
              type: string
            addAllText:
              type: array
              items:
                type: string
            setComment:
              type: array
              nullable: true
              items:
                type: string
            removeComment:
              type: string
            removeAllComment:
              type: array
              items:
                type: string
            addComment:
              type: string
            addAllComment:
              type: array
              items:
                type: string
            setTabs:
              type: string
              nullable: true
            removeTabs:
              type: string
            removeAllTabs:
              type: string
            setNewLine:
              type: boolean
              nullable: true
            removeNewLine:
              type: boolean
            removeAllNewLine:
              type: boolean
            setHtmBefore:
              type: string
              nullable: true
            removeHtmBefore:
              type: string
            removeAllHtmBefore:
              type: string
            setHtmAfter:
              type: string
              nullable: true
            removeHtmAfter:
              type: string
            removeAllHtmAfter:
              type: string
    PATCHSiteHtmResponse:
      allOf:
        - type: object
          properties:
            setUri:
              type: string
              nullable: true
            removeUri:
              type: string
            removeAllUri:
              type: string
            setPageId:
              type: string
              nullable: true
            removePageId:
              type: string
            removeAllPageId:
              type: string
            setSequenceNum:
              type: string
              nullable: true
            removeSequenceNum:
              type: string
            removeAllSequenceNum:
              type: string
            setHtmGroup:
              type: string
              nullable: true
            removeHtmGroup:
              type: string
            removeAllHtmGroup:
              type: string
            setLabels:
              type: array
              nullable: true
              items:
                type: string
            removeLabels:
              type: string
            removeAllLabels:
              type: array
              items:
                type: string
            addLabels:
              type: string
            addAllLabels:
              type: array
              items:
                type: string
            setEBefore:
              type: string
              nullable: true
            removeEBefore:
              type: string
            removeAllEBefore:
              type: string
            setEAfter:
              type: string
              nullable: true
            removeEAfter:
              type: string
            removeAllEAfter:
              type: string
            setA:
              type: object
              nullable: true
            removeA:
              type: object
            removeAllA:
              type: object
            setText:
              type: array
              nullable: true
              items:
                type: string
            removeText:
              type: string
            removeAllText:
              type: array
              items:
                type: string
            addText:
              type: string
            addAllText:
              type: array
              items:
                type: string
            setComment:
              type: array
              nullable: true
              items:
                type: string
            removeComment:
              type: string
            removeAllComment:
              type: array
              items:
                type: string
            addComment:
              type: string
            addAllComment:
              type: array
              items:
                type: string
            setTabs:
              type: string
              nullable: true
            removeTabs:
              type: string
            removeAllTabs:
              type: string
            setNewLine:
              type: boolean
              nullable: true
            removeNewLine:
              type: boolean
            removeAllNewLine:
              type: boolean
            setHtmBefore:
              type: string
              nullable: true
            removeHtmBefore:
              type: string
            removeAllHtmBefore:
              type: string
            setHtmAfter:
              type: string
              nullable: true
            removeHtmAfter:
              type: string
            removeAllHtmAfter:
              type: string
    PUTImportSiteHtmRequest:
      allOf:
        - type: object
          properties:
            uri:
              type: string
            pageId:
              type: string
            sequenceNum:
              type: string
            htmGroup:
              type: string
            labels:
              type: array
              items:
                type: string
            eBefore:
              type: string
            eAfter:
              type: string
            a:
              type: object
            text:
              type: array
              items:
                type: string
            comment:
              type: array
              items:
                type: string
            tabs:
              type: string
            newLine:
              type: boolean
            htmBefore:
              type: string
            htmAfter:
              type: string
    PUTImportSiteHtmResponse:
      allOf:
        - type: object
          properties:
            uri:
              type: string
            pageId:
              type: string
            sequenceNum:
              type: string
            htmGroup:
              type: string
            labels:
              type: array
              items:
                type: string
            eBefore:
              type: string
            eAfter:
              type: string
            a:
              type: object
            text:
              type: array
              items:
                type: string
            comment:
              type: array
              items:
                type: string
            tabs:
              type: string
            newLine:
              type: boolean
            htmBefore:
              type: string
            htmAfter:
              type: string
    GETSiteHtmResponse:
      allOf:
        - type: object
          properties:
            uri:
              type: string
            pageId:
              type: string
            sequenceNum:
              type: string
            htmGroup:
              type: string
            labels:
              type: array
              items:
                type: string
            eBefore:
              type: string
            eAfter:
              type: string
            a:
              type: object
            text:
              type: array
              items:
                type: string
            comment:
              type: array
              items:
                type: string
            tabs:
              type: string
            newLine:
              type: boolean
            htmBefore:
              type: string
            htmAfter:
              type: string
    SearchPageSiteHtmResponse:
      allOf:
        - type: string
    SearchIotNodeResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  json:
                    type: object
                  nodeName:
                    type: string
                  nodeType:
                    type: string
                  nodeId:
                    type: string
                  location:
                    type: string
                  json_moisture:
                    type: string
                  json_moisture0:
                    type: string
                  json_moisture1:
                    type: string
                  json_temperature:
                    type: string
                  json_temperature0:
                    type: string
                  json_temperatureAverage:
                    type: string
                  json_badConditionsCounter:
                    type: string
                  json_door:
                    type: string
                  json_alarmDoor:
                    type: boolean
                  json_flood:
                    type: string
                  json_alarmFlood:
                    type: boolean
                  json_lux2:
                    type: string
                  json_illuminance:
                    type: string
                  json_resistance0:
                    type: string
                  json_resistance1:
                    type: string
                  json_frequency:
                    type: string
                  json_devEui:
                    type: string
                  json_bandwidth:
                    type: string
                  json_dataRate:
                    type: string
                  json_frameCount:
                    type: string
                  json_maxPayload:
                    type: string
                  json_bitsPerSecond:
                    type: string
                  json_batteryVoltage:
                    type: string
                  json_spreadingFactor:
                    type: string
                  json_dataRateAdaptive:
                    type: boolean
                  json_swversion:
                    type: string
                  json_batteryLevel:
                    type: string
                  json_startUpCount:
                    type: string
                  json_watchdogCount:
                    type: string
                  json_historySequence:
                    type: string
                  json_versionFirmware:
                    type: string
                  json_stackTxFailRebootCount:
                    type: string
                  json_historySequencePrevious:
                    type: string
                  json_snr:
                    type: string
                  json_rssi:
                    type: string
    PATCHIotNodeRequest:
      allOf:
        - type: object
          properties:
            setJson:
              type: object
              nullable: true
            removeJson:
              type: object
            removeAllJson:
              type: object
            setNodeName:
              type: string
              nullable: true
            removeNodeName:
              type: string
            removeAllNodeName:
              type: string
            setNodeType:
              type: string
              nullable: true
            removeNodeType:
              type: string
            removeAllNodeType:
              type: string
            setNodeId:
              type: string
              nullable: true
            removeNodeId:
              type: string
            removeAllNodeId:
              type: string
            setLocation:
              type: string
              nullable: true
            removeLocation:
              type: string
            removeAllLocation:
              type: string
            setJson_moisture:
              type: string
              nullable: true
            removeJson_moisture:
              type: string
            removeAllJson_moisture:
              type: string
            setJson_moisture0:
              type: string
              nullable: true
            removeJson_moisture0:
              type: string
            removeAllJson_moisture0:
              type: string
            setJson_moisture1:
              type: string
              nullable: true
            removeJson_moisture1:
              type: string
            removeAllJson_moisture1:
              type: string
            setJson_temperature:
              type: string
              nullable: true
            removeJson_temperature:
              type: string
            removeAllJson_temperature:
              type: string
            setJson_temperature0:
              type: string
              nullable: true
            removeJson_temperature0:
              type: string
            removeAllJson_temperature0:
              type: string
            setJson_temperatureAverage:
              type: string
              nullable: true
            removeJson_temperatureAverage:
              type: string
            removeAllJson_temperatureAverage:
              type: string
            setJson_badConditionsCounter:
              type: string
              nullable: true
            removeJson_badConditionsCounter:
              type: string
            removeAllJson_badConditionsCounter:
              type: string
            setJson_door:
              type: string
              nullable: true
            removeJson_door:
              type: string
            removeAllJson_door:
              type: string
            setJson_alarmDoor:
              type: boolean
              nullable: true
            removeJson_alarmDoor:
              type: boolean
            removeAllJson_alarmDoor:
              type: boolean
            setJson_flood:
              type: string
              nullable: true
            removeJson_flood:
              type: string
            removeAllJson_flood:
              type: string
            setJson_alarmFlood:
              type: boolean
              nullable: true
            removeJson_alarmFlood:
              type: boolean
            removeAllJson_alarmFlood:
              type: boolean
            setJson_lux2:
              type: string
              nullable: true
            removeJson_lux2:
              type: string
            removeAllJson_lux2:
              type: string
            setJson_illuminance:
              type: string
              nullable: true
            removeJson_illuminance:
              type: string
            removeAllJson_illuminance:
              type: string
            setJson_resistance0:
              type: string
              nullable: true
            removeJson_resistance0:
              type: string
            removeAllJson_resistance0:
              type: string
            setJson_resistance1:
              type: string
              nullable: true
            removeJson_resistance1:
              type: string
            removeAllJson_resistance1:
              type: string
            setJson_frequency:
              type: string
              nullable: true
            removeJson_frequency:
              type: string
            removeAllJson_frequency:
              type: string
            setJson_devEui:
              type: string
              nullable: true
            removeJson_devEui:
              type: string
            removeAllJson_devEui:
              type: string
            setJson_bandwidth:
              type: string
              nullable: true
            removeJson_bandwidth:
              type: string
            removeAllJson_bandwidth:
              type: string
            setJson_dataRate:
              type: string
              nullable: true
            removeJson_dataRate:
              type: string
            removeAllJson_dataRate:
              type: string
            setJson_frameCount:
              type: string
              nullable: true
            removeJson_frameCount:
              type: string
            removeAllJson_frameCount:
              type: string
            setJson_maxPayload:
              type: string
              nullable: true
            removeJson_maxPayload:
              type: string
            removeAllJson_maxPayload:
              type: string
            setJson_bitsPerSecond:
              type: string
              nullable: true
            removeJson_bitsPerSecond:
              type: string
            removeAllJson_bitsPerSecond:
              type: string
            setJson_batteryVoltage:
              type: string
              nullable: true
            removeJson_batteryVoltage:
              type: string
            removeAllJson_batteryVoltage:
              type: string
            setJson_spreadingFactor:
              type: string
              nullable: true
            removeJson_spreadingFactor:
              type: string
            removeAllJson_spreadingFactor:
              type: string
            setJson_dataRateAdaptive:
              type: boolean
              nullable: true
            removeJson_dataRateAdaptive:
              type: boolean
            removeAllJson_dataRateAdaptive:
              type: boolean
            setJson_swversion:
              type: string
              nullable: true
            removeJson_swversion:
              type: string
            removeAllJson_swversion:
              type: string
            setJson_batteryLevel:
              type: string
              nullable: true
            removeJson_batteryLevel:
              type: string
            removeAllJson_batteryLevel:
              type: string
            setJson_startUpCount:
              type: string
              nullable: true
            removeJson_startUpCount:
              type: string
            removeAllJson_startUpCount:
              type: string
            setJson_watchdogCount:
              type: string
              nullable: true
            removeJson_watchdogCount:
              type: string
            removeAllJson_watchdogCount:
              type: string
            setJson_historySequence:
              type: string
              nullable: true
            removeJson_historySequence:
              type: string
            removeAllJson_historySequence:
              type: string
            setJson_versionFirmware:
              type: string
              nullable: true
            removeJson_versionFirmware:
              type: string
            removeAllJson_versionFirmware:
              type: string
            setJson_stackTxFailRebootCount:
              type: string
              nullable: true
            removeJson_stackTxFailRebootCount:
              type: string
            removeAllJson_stackTxFailRebootCount:
              type: string
            setJson_historySequencePrevious:
              type: string
              nullable: true
            removeJson_historySequencePrevious:
              type: string
            removeAllJson_historySequencePrevious:
              type: string
            setJson_snr:
              type: string
              nullable: true
            removeJson_snr:
              type: string
            removeAllJson_snr:
              type: string
            setJson_rssi:
              type: string
              nullable: true
            removeJson_rssi:
              type: string
            removeAllJson_rssi:
              type: string
    PATCHIotNodeResponse:
      allOf:
        - type: object
          properties:
            setJson:
              type: object
              nullable: true
            removeJson:
              type: object
            removeAllJson:
              type: object
            setNodeName:
              type: string
              nullable: true
            removeNodeName:
              type: string
            removeAllNodeName:
              type: string
            setNodeType:
              type: string
              nullable: true
            removeNodeType:
              type: string
            removeAllNodeType:
              type: string
            setNodeId:
              type: string
              nullable: true
            removeNodeId:
              type: string
            removeAllNodeId:
              type: string
            setLocation:
              type: string
              nullable: true
            removeLocation:
              type: string
            removeAllLocation:
              type: string
            setJson_moisture:
              type: string
              nullable: true
            removeJson_moisture:
              type: string
            removeAllJson_moisture:
              type: string
            setJson_moisture0:
              type: string
              nullable: true
            removeJson_moisture0:
              type: string
            removeAllJson_moisture0:
              type: string
            setJson_moisture1:
              type: string
              nullable: true
            removeJson_moisture1:
              type: string
            removeAllJson_moisture1:
              type: string
            setJson_temperature:
              type: string
              nullable: true
            removeJson_temperature:
              type: string
            removeAllJson_temperature:
              type: string
            setJson_temperature0:
              type: string
              nullable: true
            removeJson_temperature0:
              type: string
            removeAllJson_temperature0:
              type: string
            setJson_temperatureAverage:
              type: string
              nullable: true
            removeJson_temperatureAverage:
              type: string
            removeAllJson_temperatureAverage:
              type: string
            setJson_badConditionsCounter:
              type: string
              nullable: true
            removeJson_badConditionsCounter:
              type: string
            removeAllJson_badConditionsCounter:
              type: string
            setJson_door:
              type: string
              nullable: true
            removeJson_door:
              type: string
            removeAllJson_door:
              type: string
            setJson_alarmDoor:
              type: boolean
              nullable: true
            removeJson_alarmDoor:
              type: boolean
            removeAllJson_alarmDoor:
              type: boolean
            setJson_flood:
              type: string
              nullable: true
            removeJson_flood:
              type: string
            removeAllJson_flood:
              type: string
            setJson_alarmFlood:
              type: boolean
              nullable: true
            removeJson_alarmFlood:
              type: boolean
            removeAllJson_alarmFlood:
              type: boolean
            setJson_lux2:
              type: string
              nullable: true
            removeJson_lux2:
              type: string
            removeAllJson_lux2:
              type: string
            setJson_illuminance:
              type: string
              nullable: true
            removeJson_illuminance:
              type: string
            removeAllJson_illuminance:
              type: string
            setJson_resistance0:
              type: string
              nullable: true
            removeJson_resistance0:
              type: string
            removeAllJson_resistance0:
              type: string
            setJson_resistance1:
              type: string
              nullable: true
            removeJson_resistance1:
              type: string
            removeAllJson_resistance1:
              type: string
            setJson_frequency:
              type: string
              nullable: true
            removeJson_frequency:
              type: string
            removeAllJson_frequency:
              type: string
            setJson_devEui:
              type: string
              nullable: true
            removeJson_devEui:
              type: string
            removeAllJson_devEui:
              type: string
            setJson_bandwidth:
              type: string
              nullable: true
            removeJson_bandwidth:
              type: string
            removeAllJson_bandwidth:
              type: string
            setJson_dataRate:
              type: string
              nullable: true
            removeJson_dataRate:
              type: string
            removeAllJson_dataRate:
              type: string
            setJson_frameCount:
              type: string
              nullable: true
            removeJson_frameCount:
              type: string
            removeAllJson_frameCount:
              type: string
            setJson_maxPayload:
              type: string
              nullable: true
            removeJson_maxPayload:
              type: string
            removeAllJson_maxPayload:
              type: string
            setJson_bitsPerSecond:
              type: string
              nullable: true
            removeJson_bitsPerSecond:
              type: string
            removeAllJson_bitsPerSecond:
              type: string
            setJson_batteryVoltage:
              type: string
              nullable: true
            removeJson_batteryVoltage:
              type: string
            removeAllJson_batteryVoltage:
              type: string
            setJson_spreadingFactor:
              type: string
              nullable: true
            removeJson_spreadingFactor:
              type: string
            removeAllJson_spreadingFactor:
              type: string
            setJson_dataRateAdaptive:
              type: boolean
              nullable: true
            removeJson_dataRateAdaptive:
              type: boolean
            removeAllJson_dataRateAdaptive:
              type: boolean
            setJson_swversion:
              type: string
              nullable: true
            removeJson_swversion:
              type: string
            removeAllJson_swversion:
              type: string
            setJson_batteryLevel:
              type: string
              nullable: true
            removeJson_batteryLevel:
              type: string
            removeAllJson_batteryLevel:
              type: string
            setJson_startUpCount:
              type: string
              nullable: true
            removeJson_startUpCount:
              type: string
            removeAllJson_startUpCount:
              type: string
            setJson_watchdogCount:
              type: string
              nullable: true
            removeJson_watchdogCount:
              type: string
            removeAllJson_watchdogCount:
              type: string
            setJson_historySequence:
              type: string
              nullable: true
            removeJson_historySequence:
              type: string
            removeAllJson_historySequence:
              type: string
            setJson_versionFirmware:
              type: string
              nullable: true
            removeJson_versionFirmware:
              type: string
            removeAllJson_versionFirmware:
              type: string
            setJson_stackTxFailRebootCount:
              type: string
              nullable: true
            removeJson_stackTxFailRebootCount:
              type: string
            removeAllJson_stackTxFailRebootCount:
              type: string
            setJson_historySequencePrevious:
              type: string
              nullable: true
            removeJson_historySequencePrevious:
              type: string
            removeAllJson_historySequencePrevious:
              type: string
            setJson_snr:
              type: string
              nullable: true
            removeJson_snr:
              type: string
            removeAllJson_snr:
              type: string
            setJson_rssi:
              type: string
              nullable: true
            removeJson_rssi:
              type: string
            removeAllJson_rssi:
              type: string
    POSTIotNodeRequest:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
            json_moisture:
              type: string
            json_moisture0:
              type: string
            json_moisture1:
              type: string
            json_temperature:
              type: string
            json_temperature0:
              type: string
            json_temperatureAverage:
              type: string
            json_badConditionsCounter:
              type: string
            json_door:
              type: string
            json_alarmDoor:
              type: boolean
            json_flood:
              type: string
            json_alarmFlood:
              type: boolean
            json_lux2:
              type: string
            json_illuminance:
              type: string
            json_resistance0:
              type: string
            json_resistance1:
              type: string
            json_frequency:
              type: string
            json_devEui:
              type: string
            json_bandwidth:
              type: string
            json_dataRate:
              type: string
            json_frameCount:
              type: string
            json_maxPayload:
              type: string
            json_bitsPerSecond:
              type: string
            json_batteryVoltage:
              type: string
            json_spreadingFactor:
              type: string
            json_dataRateAdaptive:
              type: boolean
            json_swversion:
              type: string
            json_batteryLevel:
              type: string
            json_startUpCount:
              type: string
            json_watchdogCount:
              type: string
            json_historySequence:
              type: string
            json_versionFirmware:
              type: string
            json_stackTxFailRebootCount:
              type: string
            json_historySequencePrevious:
              type: string
            json_snr:
              type: string
            json_rssi:
              type: string
    POSTIotNodeResponse:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
            json_moisture:
              type: string
            json_moisture0:
              type: string
            json_moisture1:
              type: string
            json_temperature:
              type: string
            json_temperature0:
              type: string
            json_temperatureAverage:
              type: string
            json_badConditionsCounter:
              type: string
            json_door:
              type: string
            json_alarmDoor:
              type: boolean
            json_flood:
              type: string
            json_alarmFlood:
              type: boolean
            json_lux2:
              type: string
            json_illuminance:
              type: string
            json_resistance0:
              type: string
            json_resistance1:
              type: string
            json_frequency:
              type: string
            json_devEui:
              type: string
            json_bandwidth:
              type: string
            json_dataRate:
              type: string
            json_frameCount:
              type: string
            json_maxPayload:
              type: string
            json_bitsPerSecond:
              type: string
            json_batteryVoltage:
              type: string
            json_spreadingFactor:
              type: string
            json_dataRateAdaptive:
              type: boolean
            json_swversion:
              type: string
            json_batteryLevel:
              type: string
            json_startUpCount:
              type: string
            json_watchdogCount:
              type: string
            json_historySequence:
              type: string
            json_versionFirmware:
              type: string
            json_stackTxFailRebootCount:
              type: string
            json_historySequencePrevious:
              type: string
            json_snr:
              type: string
            json_rssi:
              type: string
    PUTImportIotNodeRequest:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
            json_moisture:
              type: string
            json_moisture0:
              type: string
            json_moisture1:
              type: string
            json_temperature:
              type: string
            json_temperature0:
              type: string
            json_temperatureAverage:
              type: string
            json_badConditionsCounter:
              type: string
            json_door:
              type: string
            json_alarmDoor:
              type: boolean
            json_flood:
              type: string
            json_alarmFlood:
              type: boolean
            json_lux2:
              type: string
            json_illuminance:
              type: string
            json_resistance0:
              type: string
            json_resistance1:
              type: string
            json_frequency:
              type: string
            json_devEui:
              type: string
            json_bandwidth:
              type: string
            json_dataRate:
              type: string
            json_frameCount:
              type: string
            json_maxPayload:
              type: string
            json_bitsPerSecond:
              type: string
            json_batteryVoltage:
              type: string
            json_spreadingFactor:
              type: string
            json_dataRateAdaptive:
              type: boolean
            json_swversion:
              type: string
            json_batteryLevel:
              type: string
            json_startUpCount:
              type: string
            json_watchdogCount:
              type: string
            json_historySequence:
              type: string
            json_versionFirmware:
              type: string
            json_stackTxFailRebootCount:
              type: string
            json_historySequencePrevious:
              type: string
            json_snr:
              type: string
            json_rssi:
              type: string
    PUTImportIotNodeResponse:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
            json_moisture:
              type: string
            json_moisture0:
              type: string
            json_moisture1:
              type: string
            json_temperature:
              type: string
            json_temperature0:
              type: string
            json_temperatureAverage:
              type: string
            json_badConditionsCounter:
              type: string
            json_door:
              type: string
            json_alarmDoor:
              type: boolean
            json_flood:
              type: string
            json_alarmFlood:
              type: boolean
            json_lux2:
              type: string
            json_illuminance:
              type: string
            json_resistance0:
              type: string
            json_resistance1:
              type: string
            json_frequency:
              type: string
            json_devEui:
              type: string
            json_bandwidth:
              type: string
            json_dataRate:
              type: string
            json_frameCount:
              type: string
            json_maxPayload:
              type: string
            json_bitsPerSecond:
              type: string
            json_batteryVoltage:
              type: string
            json_spreadingFactor:
              type: string
            json_dataRateAdaptive:
              type: boolean
            json_swversion:
              type: string
            json_batteryLevel:
              type: string
            json_startUpCount:
              type: string
            json_watchdogCount:
              type: string
            json_historySequence:
              type: string
            json_versionFirmware:
              type: string
            json_stackTxFailRebootCount:
              type: string
            json_historySequencePrevious:
              type: string
            json_snr:
              type: string
            json_rssi:
              type: string
    GETIotNodeResponse:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
            json_moisture:
              type: string
            json_moisture0:
              type: string
            json_moisture1:
              type: string
            json_temperature:
              type: string
            json_temperature0:
              type: string
            json_temperatureAverage:
              type: string
            json_badConditionsCounter:
              type: string
            json_door:
              type: string
            json_alarmDoor:
              type: boolean
            json_flood:
              type: string
            json_alarmFlood:
              type: boolean
            json_lux2:
              type: string
            json_illuminance:
              type: string
            json_resistance0:
              type: string
            json_resistance1:
              type: string
            json_frequency:
              type: string
            json_devEui:
              type: string
            json_bandwidth:
              type: string
            json_dataRate:
              type: string
            json_frameCount:
              type: string
            json_maxPayload:
              type: string
            json_bitsPerSecond:
              type: string
            json_batteryVoltage:
              type: string
            json_spreadingFactor:
              type: string
            json_dataRateAdaptive:
              type: boolean
            json_swversion:
              type: string
            json_batteryLevel:
              type: string
            json_startUpCount:
              type: string
            json_watchdogCount:
              type: string
            json_historySequence:
              type: string
            json_versionFirmware:
              type: string
            json_stackTxFailRebootCount:
              type: string
            json_historySequencePrevious:
              type: string
            json_snr:
              type: string
            json_rssi:
              type: string
    SearchPageIotNodeResponse:
      allOf:
        - type: string
    SearchSitePageResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  githubOrg:
                    type: string
                  siteName:
                    type: string
                  siteDisplayName:
                    type: string
                  sitePublicUrl:
                    type: string
                  mailingListUrl:
                    type: string
                  quayioOrg:
                    type: string
                  sitePomGroupId:
                    type: string
                  staticBaseUrl:
                    type: string
                  staticPath:
                    type: string
                  siteBaseUrl:
                    type: string
                  courseNum:
                    type: string
                  lessonNum:
                    type: string
                  uri:
                    type: string
                  pageId:
                    type: string
                  h1:
                    type: string
                  h2:
                    type: string
                  author:
                    type: string
                  pageImageUri:
                    type: string
                  pageImageWidth:
                    type: string
                  pageImageHeight:
                    type: string
                  pageImageType:
                    type: string
    POSTSitePageRequest:
      allOf:
        - type: object
          properties:
            githubOrg:
              type: string
            siteName:
              type: string
            siteDisplayName:
              type: string
            sitePublicUrl:
              type: string
            mailingListUrl:
              type: string
            quayioOrg:
              type: string
            sitePomGroupId:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            uri:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            author:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
    POSTSitePageResponse:
      allOf:
        - type: object
          properties:
            githubOrg:
              type: string
            siteName:
              type: string
            siteDisplayName:
              type: string
            sitePublicUrl:
              type: string
            mailingListUrl:
              type: string
            quayioOrg:
              type: string
            sitePomGroupId:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            uri:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            author:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
    PATCHSitePageRequest:
      allOf:
        - type: object
          properties:
            setGithubOrg:
              type: string
              nullable: true
            removeGithubOrg:
              type: string
            removeAllGithubOrg:
              type: string
            setSiteName:
              type: string
              nullable: true
            removeSiteName:
              type: string
            removeAllSiteName:
              type: string
            setSiteDisplayName:
              type: string
              nullable: true
            removeSiteDisplayName:
              type: string
            removeAllSiteDisplayName:
              type: string
            setSitePublicUrl:
              type: string
              nullable: true
            removeSitePublicUrl:
              type: string
            removeAllSitePublicUrl:
              type: string
            setMailingListUrl:
              type: string
              nullable: true
            removeMailingListUrl:
              type: string
            removeAllMailingListUrl:
              type: string
            setQuayioOrg:
              type: string
              nullable: true
            removeQuayioOrg:
              type: string
            removeAllQuayioOrg:
              type: string
            setSitePomGroupId:
              type: string
              nullable: true
            removeSitePomGroupId:
              type: string
            removeAllSitePomGroupId:
              type: string
            setStaticBaseUrl:
              type: string
              nullable: true
            removeStaticBaseUrl:
              type: string
            removeAllStaticBaseUrl:
              type: string
            setStaticPath:
              type: string
              nullable: true
            removeStaticPath:
              type: string
            removeAllStaticPath:
              type: string
            setSiteBaseUrl:
              type: string
              nullable: true
            removeSiteBaseUrl:
              type: string
            removeAllSiteBaseUrl:
              type: string
            setCourseNum:
              type: string
              nullable: true
            removeCourseNum:
              type: string
            removeAllCourseNum:
              type: string
            setLessonNum:
              type: string
              nullable: true
            removeLessonNum:
              type: string
            removeAllLessonNum:
              type: string
            setUri:
              type: string
              nullable: true
            removeUri:
              type: string
            removeAllUri:
              type: string
            setPageId:
              type: string
              nullable: true
            removePageId:
              type: string
            removeAllPageId:
              type: string
            setH1:
              type: string
              nullable: true
            removeH1:
              type: string
            removeAllH1:
              type: string
            setH2:
              type: string
              nullable: true
            removeH2:
              type: string
            removeAllH2:
              type: string
            setAuthor:
              type: string
              nullable: true
            removeAuthor:
              type: string
            removeAllAuthor:
              type: string
            setPageImageUri:
              type: string
              nullable: true
            removePageImageUri:
              type: string
            removeAllPageImageUri:
              type: string
            setPageImageWidth:
              type: string
              nullable: true
            removePageImageWidth:
              type: string
            removeAllPageImageWidth:
              type: string
            setPageImageHeight:
              type: string
              nullable: true
            removePageImageHeight:
              type: string
            removeAllPageImageHeight:
              type: string
            setPageImageType:
              type: string
              nullable: true
            removePageImageType:
              type: string
            removeAllPageImageType:
              type: string
    PATCHSitePageResponse:
      allOf:
        - type: object
          properties:
            setGithubOrg:
              type: string
              nullable: true
            removeGithubOrg:
              type: string
            removeAllGithubOrg:
              type: string
            setSiteName:
              type: string
              nullable: true
            removeSiteName:
              type: string
            removeAllSiteName:
              type: string
            setSiteDisplayName:
              type: string
              nullable: true
            removeSiteDisplayName:
              type: string
            removeAllSiteDisplayName:
              type: string
            setSitePublicUrl:
              type: string
              nullable: true
            removeSitePublicUrl:
              type: string
            removeAllSitePublicUrl:
              type: string
            setMailingListUrl:
              type: string
              nullable: true
            removeMailingListUrl:
              type: string
            removeAllMailingListUrl:
              type: string
            setQuayioOrg:
              type: string
              nullable: true
            removeQuayioOrg:
              type: string
            removeAllQuayioOrg:
              type: string
            setSitePomGroupId:
              type: string
              nullable: true
            removeSitePomGroupId:
              type: string
            removeAllSitePomGroupId:
              type: string
            setStaticBaseUrl:
              type: string
              nullable: true
            removeStaticBaseUrl:
              type: string
            removeAllStaticBaseUrl:
              type: string
            setStaticPath:
              type: string
              nullable: true
            removeStaticPath:
              type: string
            removeAllStaticPath:
              type: string
            setSiteBaseUrl:
              type: string
              nullable: true
            removeSiteBaseUrl:
              type: string
            removeAllSiteBaseUrl:
              type: string
            setCourseNum:
              type: string
              nullable: true
            removeCourseNum:
              type: string
            removeAllCourseNum:
              type: string
            setLessonNum:
              type: string
              nullable: true
            removeLessonNum:
              type: string
            removeAllLessonNum:
              type: string
            setUri:
              type: string
              nullable: true
            removeUri:
              type: string
            removeAllUri:
              type: string
            setPageId:
              type: string
              nullable: true
            removePageId:
              type: string
            removeAllPageId:
              type: string
            setH1:
              type: string
              nullable: true
            removeH1:
              type: string
            removeAllH1:
              type: string
            setH2:
              type: string
              nullable: true
            removeH2:
              type: string
            removeAllH2:
              type: string
            setAuthor:
              type: string
              nullable: true
            removeAuthor:
              type: string
            removeAllAuthor:
              type: string
            setPageImageUri:
              type: string
              nullable: true
            removePageImageUri:
              type: string
            removeAllPageImageUri:
              type: string
            setPageImageWidth:
              type: string
              nullable: true
            removePageImageWidth:
              type: string
            removeAllPageImageWidth:
              type: string
            setPageImageHeight:
              type: string
              nullable: true
            removePageImageHeight:
              type: string
            removeAllPageImageHeight:
              type: string
            setPageImageType:
              type: string
              nullable: true
            removePageImageType:
              type: string
            removeAllPageImageType:
              type: string
    PUTImportSitePageRequest:
      allOf:
        - type: object
          properties:
            githubOrg:
              type: string
            siteName:
              type: string
            siteDisplayName:
              type: string
            sitePublicUrl:
              type: string
            mailingListUrl:
              type: string
            quayioOrg:
              type: string
            sitePomGroupId:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            uri:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            author:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
    PUTImportSitePageResponse:
      allOf:
        - type: object
          properties:
            githubOrg:
              type: string
            siteName:
              type: string
            siteDisplayName:
              type: string
            sitePublicUrl:
              type: string
            mailingListUrl:
              type: string
            quayioOrg:
              type: string
            sitePomGroupId:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            uri:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            author:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
    GETSitePageResponse:
      allOf:
        - type: object
          properties:
            githubOrg:
              type: string
            siteName:
              type: string
            siteDisplayName:
              type: string
            sitePublicUrl:
              type: string
            mailingListUrl:
              type: string
            quayioOrg:
              type: string
            sitePomGroupId:
              type: string
            staticBaseUrl:
              type: string
            staticPath:
              type: string
            siteBaseUrl:
              type: string
            courseNum:
              type: string
            lessonNum:
              type: string
            uri:
              type: string
            pageId:
              type: string
            h1:
              type: string
            h2:
              type: string
            author:
              type: string
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
    SearchPageSitePageResponse:
      allOf:
        - type: string
    SearchSystemEventResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  status:
                    type: string
                  completed:
                    type: string
                    format: date-time
                  inheritPk:
                    type: string
                  created:
                    type: string
                    format: date-time
                  modified:
                    type: string
                    format: date-time
                  pageImageUri:
                    type: string
                  pageImageWidth:
                    type: string
                  pageImageHeight:
                    type: string
                  pageImageType:
                    type: string
                  archived:
                    type: boolean
                  deleted:
                    type: boolean
                  classCanonicalName:
                    type: string
                  classSimpleName:
                    type: string
                  classCanonicalNames:
                    type: array
                    items:
                      type: string
                  sessionId:
                    type: string
                  userKey:
                    type: string
                  saves:
                    type: array
                    items:
                      type: string
                  objectTitle:
                    type: string
                  objectId:
                    type: string
                  objectSuggest:
                    type: string
                  objectText:
                    type: array
                    items:
                      type: string
                  pageUrlId:
                    type: string
                  pageUrlPk:
                    type: string
                  pageUrlApi:
                    type: string
                  id:
                    type: string
    POSTSystemEventRequest:
      allOf:
        - type: object
          properties:
            type:
              type: string
            message:
              type: string
            status:
              type: string
            completed:
              type: string
              format: date-time
            inheritPk:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: array
              items:
                type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            id:
              type: string
    POSTSystemEventResponse:
      allOf:
        - type: object
          properties:
            type:
              type: string
            message:
              type: string
            status:
              type: string
            completed:
              type: string
              format: date-time
            inheritPk:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: array
              items:
                type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            id:
              type: string
    PATCHSystemEventRequest:
      allOf:
        - type: object
          properties:
            setType:
              type: string
              nullable: true
            removeType:
              type: string
            removeAllType:
              type: string
            setMessage:
              type: string
              nullable: true
            removeMessage:
              type: string
            removeAllMessage:
              type: string
            setStatus:
              type: string
              nullable: true
            removeStatus:
              type: string
            removeAllStatus:
              type: string
            setCompleted:
              type: string
              nullable: true
              format: date-time
            removeCompleted:
              type: string
              format: date-time
            removeAllCompleted:
              type: string
              format: date-time
            setInheritPk:
              type: string
              nullable: true
            removeInheritPk:
              type: string
            removeAllInheritPk:
              type: string
            setCreated:
              type: string
              nullable: true
              format: date-time
            removeCreated:
              type: string
              format: date-time
            removeAllCreated:
              type: string
              format: date-time
            setModified:
              type: string
              nullable: true
              format: date-time
            removeModified:
              type: string
              format: date-time
            removeAllModified:
              type: string
              format: date-time
            setPageImageUri:
              type: string
              nullable: true
            removePageImageUri:
              type: string
            removeAllPageImageUri:
              type: string
            setPageImageWidth:
              type: string
              nullable: true
            removePageImageWidth:
              type: string
            removeAllPageImageWidth:
              type: string
            setPageImageHeight:
              type: string
              nullable: true
            removePageImageHeight:
              type: string
            removeAllPageImageHeight:
              type: string
            setPageImageType:
              type: string
              nullable: true
            removePageImageType:
              type: string
            removeAllPageImageType:
              type: string
            setArchived:
              type: boolean
              nullable: true
            removeArchived:
              type: boolean
            removeAllArchived:
              type: boolean
            setDeleted:
              type: boolean
              nullable: true
            removeDeleted:
              type: boolean
            removeAllDeleted:
              type: boolean
            setClassCanonicalName:
              type: string
              nullable: true
            removeClassCanonicalName:
              type: string
            removeAllClassCanonicalName:
              type: string
            setClassSimpleName:
              type: string
              nullable: true
            removeClassSimpleName:
              type: string
            removeAllClassSimpleName:
              type: string
            setClassCanonicalNames:
              type: array
              nullable: true
              items:
                type: string
            removeClassCanonicalNames:
              type: string
            removeAllClassCanonicalNames:
              type: array
              items:
                type: string
            addClassCanonicalNames:
              type: string
            addAllClassCanonicalNames:
              type: array
              items:
                type: string
            setSessionId:
              type: string
              nullable: true
            removeSessionId:
              type: string
            removeAllSessionId:
              type: string
            setUserKey:
              type: string
              nullable: true
            removeUserKey:
              type: string
            removeAllUserKey:
              type: string
            setSaves:
              type: array
              nullable: true
              items:
                type: string
            removeSaves:
              type: string
            removeAllSaves:
              type: array
              items:
                type: string
            addSaves:
              type: string
            addAllSaves:
              type: array
              items:
                type: string
            setObjectTitle:
              type: string
              nullable: true
            removeObjectTitle:
              type: string
            removeAllObjectTitle:
              type: string
            setObjectId:
              type: string
              nullable: true
            removeObjectId:
              type: string
            removeAllObjectId:
              type: string
            setObjectSuggest:
              type: string
              nullable: true
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
            setObjectText:
              type: array
              nullable: true
              items:
                type: string
            removeObjectText:
              type: string
            removeAllObjectText:
              type: array
              items:
                type: string
            addObjectText:
              type: string
            addAllObjectText:
              type: array
              items:
                type: string
            setPageUrlId:
              type: string
              nullable: true
            removePageUrlId:
              type: string
            removeAllPageUrlId:
              type: string
            setPageUrlPk:
              type: string
              nullable: true
            removePageUrlPk:
              type: string
            removeAllPageUrlPk:
              type: string
            setPageUrlApi:
              type: string
              nullable: true
            removePageUrlApi:
              type: string
            removeAllPageUrlApi:
              type: string
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
    PATCHSystemEventResponse:
      allOf:
        - type: object
          properties:
            setType:
              type: string
              nullable: true
            removeType:
              type: string
            removeAllType:
              type: string
            setMessage:
              type: string
              nullable: true
            removeMessage:
              type: string
            removeAllMessage:
              type: string
            setStatus:
              type: string
              nullable: true
            removeStatus:
              type: string
            removeAllStatus:
              type: string
            setCompleted:
              type: string
              nullable: true
              format: date-time
            removeCompleted:
              type: string
              format: date-time
            removeAllCompleted:
              type: string
              format: date-time
            setInheritPk:
              type: string
              nullable: true
            removeInheritPk:
              type: string
            removeAllInheritPk:
              type: string
            setCreated:
              type: string
              nullable: true
              format: date-time
            removeCreated:
              type: string
              format: date-time
            removeAllCreated:
              type: string
              format: date-time
            setModified:
              type: string
              nullable: true
              format: date-time
            removeModified:
              type: string
              format: date-time
            removeAllModified:
              type: string
              format: date-time
            setPageImageUri:
              type: string
              nullable: true
            removePageImageUri:
              type: string
            removeAllPageImageUri:
              type: string
            setPageImageWidth:
              type: string
              nullable: true
            removePageImageWidth:
              type: string
            removeAllPageImageWidth:
              type: string
            setPageImageHeight:
              type: string
              nullable: true
            removePageImageHeight:
              type: string
            removeAllPageImageHeight:
              type: string
            setPageImageType:
              type: string
              nullable: true
            removePageImageType:
              type: string
            removeAllPageImageType:
              type: string
            setArchived:
              type: boolean
              nullable: true
            removeArchived:
              type: boolean
            removeAllArchived:
              type: boolean
            setDeleted:
              type: boolean
              nullable: true
            removeDeleted:
              type: boolean
            removeAllDeleted:
              type: boolean
            setClassCanonicalName:
              type: string
              nullable: true
            removeClassCanonicalName:
              type: string
            removeAllClassCanonicalName:
              type: string
            setClassSimpleName:
              type: string
              nullable: true
            removeClassSimpleName:
              type: string
            removeAllClassSimpleName:
              type: string
            setClassCanonicalNames:
              type: array
              nullable: true
              items:
                type: string
            removeClassCanonicalNames:
              type: string
            removeAllClassCanonicalNames:
              type: array
              items:
                type: string
            addClassCanonicalNames:
              type: string
            addAllClassCanonicalNames:
              type: array
              items:
                type: string
            setSessionId:
              type: string
              nullable: true
            removeSessionId:
              type: string
            removeAllSessionId:
              type: string
            setUserKey:
              type: string
              nullable: true
            removeUserKey:
              type: string
            removeAllUserKey:
              type: string
            setSaves:
              type: array
              nullable: true
              items:
                type: string
            removeSaves:
              type: string
            removeAllSaves:
              type: array
              items:
                type: string
            addSaves:
              type: string
            addAllSaves:
              type: array
              items:
                type: string
            setObjectTitle:
              type: string
              nullable: true
            removeObjectTitle:
              type: string
            removeAllObjectTitle:
              type: string
            setObjectId:
              type: string
              nullable: true
            removeObjectId:
              type: string
            removeAllObjectId:
              type: string
            setObjectSuggest:
              type: string
              nullable: true
            removeObjectSuggest:
              type: string
            removeAllObjectSuggest:
              type: string
            setObjectText:
              type: array
              nullable: true
              items:
                type: string
            removeObjectText:
              type: string
            removeAllObjectText:
              type: array
              items:
                type: string
            addObjectText:
              type: string
            addAllObjectText:
              type: array
              items:
                type: string
            setPageUrlId:
              type: string
              nullable: true
            removePageUrlId:
              type: string
            removeAllPageUrlId:
              type: string
            setPageUrlPk:
              type: string
              nullable: true
            removePageUrlPk:
              type: string
            removeAllPageUrlPk:
              type: string
            setPageUrlApi:
              type: string
              nullable: true
            removePageUrlApi:
              type: string
            removeAllPageUrlApi:
              type: string
            setId:
              type: string
              nullable: true
            removeId:
              type: string
            removeAllId:
              type: string
    PUTImportSystemEventRequest:
      allOf:
        - type: object
          properties:
            type:
              type: string
            message:
              type: string
            status:
              type: string
            completed:
              type: string
              format: date-time
            inheritPk:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: array
              items:
                type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            id:
              type: string
    PUTImportSystemEventResponse:
      allOf:
        - type: object
          properties:
            type:
              type: string
            message:
              type: string
            status:
              type: string
            completed:
              type: string
              format: date-time
            inheritPk:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: array
              items:
                type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            id:
              type: string
    GETSystemEventResponse:
      allOf:
        - type: object
          properties:
            type:
              type: string
            message:
              type: string
            status:
              type: string
            completed:
              type: string
              format: date-time
            inheritPk:
              type: string
            created:
              type: string
              format: date-time
            modified:
              type: string
              format: date-time
            pageImageUri:
              type: string
            pageImageWidth:
              type: string
            pageImageHeight:
              type: string
            pageImageType:
              type: string
            archived:
              type: boolean
            deleted:
              type: boolean
            classCanonicalName:
              type: string
            classSimpleName:
              type: string
            classCanonicalNames:
              type: array
              items:
                type: string
            sessionId:
              type: string
            userKey:
              type: string
            saves:
              type: array
              items:
                type: string
            objectTitle:
              type: string
            objectId:
              type: string
            objectSuggest:
              type: string
            objectText:
              type: array
              items:
                type: string
            pageUrlId:
              type: string
            pageUrlPk:
              type: string
            pageUrlApi:
              type: string
            id:
              type: string
    SearchPageSystemEventResponse:
      allOf:
        - type: string
    SearchTrafficLightResponse:
      allOf:
        - $ref: "#/components/schemas/SearchMapResultResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  trafficLightId:
                    type: string
                  trafficLightType:
                    type: string
                  angle:
                    type: string
                  color:
                    type: string
    PATCHTrafficLightRequest:
      allOf:
        - type: object
          properties:
            setTrafficLightId:
              type: string
              nullable: true
            removeTrafficLightId:
              type: string
            removeAllTrafficLightId:
              type: string
            setTrafficLightType:
              type: string
              nullable: true
            removeTrafficLightType:
              type: string
            removeAllTrafficLightType:
              type: string
            setAngle:
              type: string
              nullable: true
            removeAngle:
              type: string
            removeAllAngle:
              type: string
            setColor:
              type: string
              nullable: true
            removeColor:
              type: string
            removeAllColor:
              type: string
    PATCHTrafficLightResponse:
      allOf:
        - type: object
          properties:
            setTrafficLightId:
              type: string
              nullable: true
            removeTrafficLightId:
              type: string
            removeAllTrafficLightId:
              type: string
            setTrafficLightType:
              type: string
              nullable: true
            removeTrafficLightType:
              type: string
            removeAllTrafficLightType:
              type: string
            setAngle:
              type: string
              nullable: true
            removeAngle:
              type: string
            removeAllAngle:
              type: string
            setColor:
              type: string
              nullable: true
            removeColor:
              type: string
            removeAllColor:
              type: string
    POSTTrafficLightRequest:
      allOf:
        - type: object
          properties:
            trafficLightId:
              type: string
            trafficLightType:
              type: string
            angle:
              type: string
            color:
              type: string
    POSTTrafficLightResponse:
      allOf:
        - type: object
          properties:
            trafficLightId:
              type: string
            trafficLightType:
              type: string
            angle:
              type: string
            color:
              type: string
    PUTImportTrafficLightRequest:
      allOf:
        - type: object
          properties:
            trafficLightId:
              type: string
            trafficLightType:
              type: string
            angle:
              type: string
            color:
              type: string
    PUTImportTrafficLightResponse:
      allOf:
        - type: object
          properties:
            trafficLightId:
              type: string
            trafficLightType:
              type: string
            angle:
              type: string
            color:
              type: string
    GETTrafficLightResponse:
      allOf:
        - $ref: "#/components/schemas/GETMapResultResponse"
        - type: object
          properties:
            trafficLightId:
              type: string
            trafficLightType:
              type: string
            angle:
              type: string
            color:
              type: string
    SearchPageTrafficLightResponse:
      allOf:
        - type: string
    SearchTrafficLightStepResponse:
      allOf:
        - $ref: "#/components/schemas/SearchMapResultResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  trafficLightId:
                    type: string
                  trafficLightType:
                    type: string
                  angle:
                    type: string
                  state:
                    type: string
                  programId:
                    type: string
                  phase:
                    type: string
    PATCHTrafficLightStepRequest:
      allOf:
        - type: object
          properties:
            setTrafficLightId:
              type: string
              nullable: true
            removeTrafficLightId:
              type: string
            removeAllTrafficLightId:
              type: string
            setTrafficLightType:
              type: string
              nullable: true
            removeTrafficLightType:
              type: string
            removeAllTrafficLightType:
              type: string
            setAngle:
              type: string
              nullable: true
            removeAngle:
              type: string
            removeAllAngle:
              type: string
            setState:
              type: string
              nullable: true
            removeState:
              type: string
            removeAllState:
              type: string
            setProgramId:
              type: string
              nullable: true
            removeProgramId:
              type: string
            removeAllProgramId:
              type: string
            setPhase:
              type: string
              nullable: true
            removePhase:
              type: string
            removeAllPhase:
              type: string
    PATCHTrafficLightStepResponse:
      allOf:
        - type: object
          properties:
            setTrafficLightId:
              type: string
              nullable: true
            removeTrafficLightId:
              type: string
            removeAllTrafficLightId:
              type: string
            setTrafficLightType:
              type: string
              nullable: true
            removeTrafficLightType:
              type: string
            removeAllTrafficLightType:
              type: string
            setAngle:
              type: string
              nullable: true
            removeAngle:
              type: string
            removeAllAngle:
              type: string
            setState:
              type: string
              nullable: true
            removeState:
              type: string
            removeAllState:
              type: string
            setProgramId:
              type: string
              nullable: true
            removeProgramId:
              type: string
            removeAllProgramId:
              type: string
            setPhase:
              type: string
              nullable: true
            removePhase:
              type: string
            removeAllPhase:
              type: string
    POSTTrafficLightStepRequest:
      allOf:
        - type: object
          properties:
            trafficLightId:
              type: string
            trafficLightType:
              type: string
            angle:
              type: string
            state:
              type: string
            programId:
              type: string
            phase:
              type: string
    POSTTrafficLightStepResponse:
      allOf:
        - type: object
          properties:
            trafficLightId:
              type: string
            trafficLightType:
              type: string
            angle:
              type: string
            state:
              type: string
            programId:
              type: string
            phase:
              type: string
    PUTImportTrafficLightStepRequest:
      allOf:
        - type: object
          properties:
            trafficLightId:
              type: string
            trafficLightType:
              type: string
            angle:
              type: string
            state:
              type: string
            programId:
              type: string
            phase:
              type: string
    PUTImportTrafficLightStepResponse:
      allOf:
        - type: object
          properties:
            trafficLightId:
              type: string
            trafficLightType:
              type: string
            angle:
              type: string
            state:
              type: string
            programId:
              type: string
            phase:
              type: string
    GETTrafficLightStepResponse:
      allOf:
        - $ref: "#/components/schemas/GETMapResultResponse"
        - type: object
          properties:
            trafficLightId:
              type: string
            trafficLightType:
              type: string
            angle:
              type: string
            state:
              type: string
            programId:
              type: string
            phase:
              type: string
    SearchPageTrafficLightStepResponse:
      allOf:
        - type: string
    SearchPersonStepResponse:
      allOf:
        - $ref: "#/components/schemas/SearchMapResultResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  personId:
                    type: string
                  personType:
                    type: string
                  angle:
                    type: string
                  speed:
                    type: string
                  pos:
                    type: string
                  slope:
                    type: string
    PATCHPersonStepRequest:
      allOf:
        - type: object
          properties:
            setPersonId:
              type: string
              nullable: true
            removePersonId:
              type: string
            removeAllPersonId:
              type: string
            setPersonType:
              type: string
              nullable: true
            removePersonType:
              type: string
            removeAllPersonType:
              type: string
            setAngle:
              type: string
              nullable: true
            removeAngle:
              type: string
            removeAllAngle:
              type: string
            setSpeed:
              type: string
              nullable: true
            removeSpeed:
              type: string
            removeAllSpeed:
              type: string
            setPos:
              type: string
              nullable: true
            removePos:
              type: string
            removeAllPos:
              type: string
            setSlope:
              type: string
              nullable: true
            removeSlope:
              type: string
            removeAllSlope:
              type: string
    PATCHPersonStepResponse:
      allOf:
        - type: object
          properties:
            setPersonId:
              type: string
              nullable: true
            removePersonId:
              type: string
            removeAllPersonId:
              type: string
            setPersonType:
              type: string
              nullable: true
            removePersonType:
              type: string
            removeAllPersonType:
              type: string
            setAngle:
              type: string
              nullable: true
            removeAngle:
              type: string
            removeAllAngle:
              type: string
            setSpeed:
              type: string
              nullable: true
            removeSpeed:
              type: string
            removeAllSpeed:
              type: string
            setPos:
              type: string
              nullable: true
            removePos:
              type: string
            removeAllPos:
              type: string
            setSlope:
              type: string
              nullable: true
            removeSlope:
              type: string
            removeAllSlope:
              type: string
    POSTPersonStepRequest:
      allOf:
        - type: object
          properties:
            personId:
              type: string
            personType:
              type: string
            angle:
              type: string
            speed:
              type: string
            pos:
              type: string
            slope:
              type: string
    POSTPersonStepResponse:
      allOf:
        - type: object
          properties:
            personId:
              type: string
            personType:
              type: string
            angle:
              type: string
            speed:
              type: string
            pos:
              type: string
            slope:
              type: string
    PUTImportPersonStepRequest:
      allOf:
        - type: object
          properties:
            personId:
              type: string
            personType:
              type: string
            angle:
              type: string
            speed:
              type: string
            pos:
              type: string
            slope:
              type: string
    PUTImportPersonStepResponse:
      allOf:
        - type: object
          properties:
            personId:
              type: string
            personType:
              type: string
            angle:
              type: string
            speed:
              type: string
            pos:
              type: string
            slope:
              type: string
    GETPersonStepResponse:
      allOf:
        - $ref: "#/components/schemas/GETMapResultResponse"
        - type: object
          properties:
            personId:
              type: string
            personType:
              type: string
            angle:
              type: string
            speed:
              type: string
            pos:
              type: string
            slope:
              type: string
    SearchPagePersonStepResponse:
      allOf:
        - type: string
    SearchTrafficSimulationResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  simulationName:
                    type: string
                  sumocfgPath:
                    type: string
                  fcdFilePath:
                    type: string
                  netFilePath:
                    type: string
                  startDateTime:
                    type: string
                  startSeconds:
                    type: string
                  endSeconds:
                    type: string
                  stepSeconds:
                    type: string
                  tlsStatesPaths:
                    type: array
                    items:
                      type: string
                  additionalFilePaths:
                    type: array
                    items:
                      type: string
    PATCHTrafficSimulationRequest:
      allOf:
        - type: object
          properties:
            setSimulationName:
              type: string
              nullable: true
            removeSimulationName:
              type: string
            removeAllSimulationName:
              type: string
            setSumocfgPath:
              type: string
              nullable: true
            removeSumocfgPath:
              type: string
            removeAllSumocfgPath:
              type: string
            setFcdFilePath:
              type: string
              nullable: true
            removeFcdFilePath:
              type: string
            removeAllFcdFilePath:
              type: string
            setNetFilePath:
              type: string
              nullable: true
            removeNetFilePath:
              type: string
            removeAllNetFilePath:
              type: string
            setStartDateTime:
              type: string
              nullable: true
            removeStartDateTime:
              type: string
            removeAllStartDateTime:
              type: string
            setStartSeconds:
              type: string
              nullable: true
            removeStartSeconds:
              type: string
            removeAllStartSeconds:
              type: string
            setEndSeconds:
              type: string
              nullable: true
            removeEndSeconds:
              type: string
            removeAllEndSeconds:
              type: string
            setStepSeconds:
              type: string
              nullable: true
            removeStepSeconds:
              type: string
            removeAllStepSeconds:
              type: string
            setTlsStatesPaths:
              type: array
              nullable: true
              items:
                type: string
            removeTlsStatesPaths:
              type: string
            removeAllTlsStatesPaths:
              type: array
              items:
                type: string
            addTlsStatesPaths:
              type: string
            addAllTlsStatesPaths:
              type: array
              items:
                type: string
            setAdditionalFilePaths:
              type: array
              nullable: true
              items:
                type: string
            removeAdditionalFilePaths:
              type: string
            removeAllAdditionalFilePaths:
              type: array
              items:
                type: string
            addAdditionalFilePaths:
              type: string
            addAllAdditionalFilePaths:
              type: array
              items:
                type: string
    PATCHTrafficSimulationResponse:
      allOf:
        - type: object
          properties:
            setSimulationName:
              type: string
              nullable: true
            removeSimulationName:
              type: string
            removeAllSimulationName:
              type: string
            setSumocfgPath:
              type: string
              nullable: true
            removeSumocfgPath:
              type: string
            removeAllSumocfgPath:
              type: string
            setFcdFilePath:
              type: string
              nullable: true
            removeFcdFilePath:
              type: string
            removeAllFcdFilePath:
              type: string
            setNetFilePath:
              type: string
              nullable: true
            removeNetFilePath:
              type: string
            removeAllNetFilePath:
              type: string
            setStartDateTime:
              type: string
              nullable: true
            removeStartDateTime:
              type: string
            removeAllStartDateTime:
              type: string
            setStartSeconds:
              type: string
              nullable: true
            removeStartSeconds:
              type: string
            removeAllStartSeconds:
              type: string
            setEndSeconds:
              type: string
              nullable: true
            removeEndSeconds:
              type: string
            removeAllEndSeconds:
              type: string
            setStepSeconds:
              type: string
              nullable: true
            removeStepSeconds:
              type: string
            removeAllStepSeconds:
              type: string
            setTlsStatesPaths:
              type: array
              nullable: true
              items:
                type: string
            removeTlsStatesPaths:
              type: string
            removeAllTlsStatesPaths:
              type: array
              items:
                type: string
            addTlsStatesPaths:
              type: string
            addAllTlsStatesPaths:
              type: array
              items:
                type: string
            setAdditionalFilePaths:
              type: array
              nullable: true
              items:
                type: string
            removeAdditionalFilePaths:
              type: string
            removeAllAdditionalFilePaths:
              type: array
              items:
                type: string
            addAdditionalFilePaths:
              type: string
            addAllAdditionalFilePaths:
              type: array
              items:
                type: string
    POSTTrafficSimulationRequest:
      allOf:
        - type: object
          properties:
            simulationName:
              type: string
            sumocfgPath:
              type: string
            fcdFilePath:
              type: string
            netFilePath:
              type: string
            startDateTime:
              type: string
            startSeconds:
              type: string
            endSeconds:
              type: string
            stepSeconds:
              type: string
            tlsStatesPaths:
              type: array
              items:
                type: string
            additionalFilePaths:
              type: array
              items:
                type: string
    POSTTrafficSimulationResponse:
      allOf:
        - type: object
          properties:
            simulationName:
              type: string
            sumocfgPath:
              type: string
            fcdFilePath:
              type: string
            netFilePath:
              type: string
            startDateTime:
              type: string
            startSeconds:
              type: string
            endSeconds:
              type: string
            stepSeconds:
              type: string
            tlsStatesPaths:
              type: array
              items:
                type: string
            additionalFilePaths:
              type: array
              items:
                type: string
    PUTImportTrafficSimulationRequest:
      allOf:
        - type: object
          properties:
            simulationName:
              type: string
            sumocfgPath:
              type: string
            fcdFilePath:
              type: string
            netFilePath:
              type: string
            startDateTime:
              type: string
            startSeconds:
              type: string
            endSeconds:
              type: string
            stepSeconds:
              type: string
            tlsStatesPaths:
              type: array
              items:
                type: string
            additionalFilePaths:
              type: array
              items:
                type: string
    PUTImportTrafficSimulationResponse:
      allOf:
        - type: object
          properties:
            simulationName:
              type: string
            sumocfgPath:
              type: string
            fcdFilePath:
              type: string
            netFilePath:
              type: string
            startDateTime:
              type: string
            startSeconds:
              type: string
            endSeconds:
              type: string
            stepSeconds:
              type: string
            tlsStatesPaths:
              type: array
              items:
                type: string
            additionalFilePaths:
              type: array
              items:
                type: string
    GETTrafficSimulationResponse:
      allOf:
        - type: object
          properties:
            simulationName:
              type: string
            sumocfgPath:
              type: string
            fcdFilePath:
              type: string
            netFilePath:
              type: string
            startDateTime:
              type: string
            startSeconds:
              type: string
            endSeconds:
              type: string
            stepSeconds:
              type: string
            tlsStatesPaths:
              type: array
              items:
                type: string
            additionalFilePaths:
              type: array
              items:
                type: string
    SearchPageTrafficSimulationResponse:
      allOf:
        - type: string
    MapSearchPageTrafficSimulationResponse:
      allOf:
        - type: string
    SearchTimeStepResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  simulationKey:
                    type: string
                  path:
                    type: string
                  time:
                    type: string
    PATCHTimeStepRequest:
      allOf:
        - type: object
          properties:
            setSimulationKey:
              type: string
              nullable: true
            removeSimulationKey:
              type: string
            removeAllSimulationKey:
              type: string
            setPath:
              type: string
              nullable: true
            removePath:
              type: string
            removeAllPath:
              type: string
            setTime:
              type: string
              nullable: true
            removeTime:
              type: string
            removeAllTime:
              type: string
    PATCHTimeStepResponse:
      allOf:
        - type: object
          properties:
            setSimulationKey:
              type: string
              nullable: true
            removeSimulationKey:
              type: string
            removeAllSimulationKey:
              type: string
            setPath:
              type: string
              nullable: true
            removePath:
              type: string
            removeAllPath:
              type: string
            setTime:
              type: string
              nullable: true
            removeTime:
              type: string
            removeAllTime:
              type: string
    POSTTimeStepRequest:
      allOf:
        - type: object
          properties:
            simulationKey:
              type: string
            path:
              type: string
            time:
              type: string
    POSTTimeStepResponse:
      allOf:
        - type: object
          properties:
            simulationKey:
              type: string
            path:
              type: string
            time:
              type: string
    PUTImportTimeStepRequest:
      allOf:
        - type: object
          properties:
            simulationKey:
              type: string
            path:
              type: string
            time:
              type: string
    PUTImportTimeStepResponse:
      allOf:
        - type: object
          properties:
            simulationKey:
              type: string
            path:
              type: string
            time:
              type: string
    GETTimeStepResponse:
      allOf:
        - type: object
          properties:
            simulationKey:
              type: string
            path:
              type: string
            time:
              type: string
    SearchPageTimeStepResponse:
      allOf:
        - type: string
    SearchVehicleStepResponse:
      allOf:
        - $ref: "#/components/schemas/SearchMapResultResponse"
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  vehicleId:
                    type: string
                  vehicleType:
                    type: string
                  angle:
                    type: string
                  speed:
                    type: string
                  pos:
                    type: string
                  slope:
                    type: string
    PATCHVehicleStepRequest:
      allOf:
        - type: object
          properties:
            setVehicleId:
              type: string
              nullable: true
            removeVehicleId:
              type: string
            removeAllVehicleId:
              type: string
            setVehicleType:
              type: string
              nullable: true
            removeVehicleType:
              type: string
            removeAllVehicleType:
              type: string
            setAngle:
              type: string
              nullable: true
            removeAngle:
              type: string
            removeAllAngle:
              type: string
            setSpeed:
              type: string
              nullable: true
            removeSpeed:
              type: string
            removeAllSpeed:
              type: string
            setPos:
              type: string
              nullable: true
            removePos:
              type: string
            removeAllPos:
              type: string
            setSlope:
              type: string
              nullable: true
            removeSlope:
              type: string
            removeAllSlope:
              type: string
    PATCHVehicleStepResponse:
      allOf:
        - type: object
          properties:
            setVehicleId:
              type: string
              nullable: true
            removeVehicleId:
              type: string
            removeAllVehicleId:
              type: string
            setVehicleType:
              type: string
              nullable: true
            removeVehicleType:
              type: string
            removeAllVehicleType:
              type: string
            setAngle:
              type: string
              nullable: true
            removeAngle:
              type: string
            removeAllAngle:
              type: string
            setSpeed:
              type: string
              nullable: true
            removeSpeed:
              type: string
            removeAllSpeed:
              type: string
            setPos:
              type: string
              nullable: true
            removePos:
              type: string
            removeAllPos:
              type: string
            setSlope:
              type: string
              nullable: true
            removeSlope:
              type: string
            removeAllSlope:
              type: string
    POSTVehicleStepRequest:
      allOf:
        - type: object
          properties:
            vehicleId:
              type: string
            vehicleType:
              type: string
            angle:
              type: string
            speed:
              type: string
            pos:
              type: string
            slope:
              type: string
    POSTVehicleStepResponse:
      allOf:
        - type: object
          properties:
            vehicleId:
              type: string
            vehicleType:
              type: string
            angle:
              type: string
            speed:
              type: string
            pos:
              type: string
            slope:
              type: string
    PUTImportVehicleStepRequest:
      allOf:
        - type: object
          properties:
            vehicleId:
              type: string
            vehicleType:
              type: string
            angle:
              type: string
            speed:
              type: string
            pos:
              type: string
            slope:
              type: string
    PUTImportVehicleStepResponse:
      allOf:
        - type: object
          properties:
            vehicleId:
              type: string
            vehicleType:
              type: string
            angle:
              type: string
            speed:
              type: string
            pos:
              type: string
            slope:
              type: string
    GETVehicleStepResponse:
      allOf:
        - $ref: "#/components/schemas/GETMapResultResponse"
        - type: object
          properties:
            vehicleId:
              type: string
            vehicleType:
              type: string
            angle:
              type: string
            speed:
              type: string
            pos:
              type: string
            slope:
              type: string
    SearchPageVehicleStepResponse:
      allOf:
        - type: string
    SearchSiteUserResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  userKeys:
                    type: array
                    items:
                      type: string
                  userId:
                    type: string
                  userName:
                    type: string
                  userEmail:
                    type: string
                  userFirstName:
                    type: string
                  userLastName:
                    type: string
                  userFullName:
                    type: string
                  seeArchived:
                    type: boolean
                  seeDeleted:
                    type: boolean
    PATCHSiteUserRequest:
      allOf:
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    PATCHSiteUserResponse:
      allOf:
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
            setSeeArchived:
              type: boolean
              nullable: true
            removeSeeArchived:
              type: boolean
            removeAllSeeArchived:
              type: boolean
            setSeeDeleted:
              type: boolean
              nullable: true
            removeSeeDeleted:
              type: boolean
            removeAllSeeDeleted:
              type: boolean
    POSTSiteUserRequest:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    POSTSiteUserResponse:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    PUTImportSiteUserRequest:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    PUTImportSiteUserResponse:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
            seeArchived:
              type: boolean
            seeDeleted:
              type: boolean
    SearchPageSiteUserResponse:
      allOf:
        - type: string
    SearchIotNodeStepResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  json:
                    type: object
                  nodeName:
                    type: string
                  nodeType:
                    type: string
                  nodeId:
                    type: string
                  location:
                    type: string
                  json_moisture:
                    type: string
                  json_moisture0:
                    type: string
                  json_moisture1:
                    type: string
                  json_temperature:
                    type: string
                  json_temperature0:
                    type: string
                  json_temperatureAverage:
                    type: string
                  json_badConditionsCounter:
                    type: string
                  json_door:
                    type: string
                  json_alarmDoor:
                    type: boolean
                  json_flood:
                    type: string
                  json_alarmFlood:
                    type: boolean
                  json_lux2:
                    type: string
                  json_illuminance:
                    type: string
                  json_resistance0:
                    type: string
                  json_resistance1:
                    type: string
                  json_frequency:
                    type: string
                  json_devEui:
                    type: string
                  json_bandwidth:
                    type: string
                  json_dataRate:
                    type: string
                  json_frameCount:
                    type: string
                  json_maxPayload:
                    type: string
                  json_bitsPerSecond:
                    type: string
                  json_batteryVoltage:
                    type: string
                  json_spreadingFactor:
                    type: string
                  json_dataRateAdaptive:
                    type: boolean
                  json_swversion:
                    type: string
                  json_batteryLevel:
                    type: string
                  json_startUpCount:
                    type: string
                  json_watchdogCount:
                    type: string
                  json_historySequence:
                    type: string
                  json_versionFirmware:
                    type: string
                  json_stackTxFailRebootCount:
                    type: string
                  json_historySequencePrevious:
                    type: string
                  json_snr:
                    type: string
                  json_rssi:
                    type: string
    PATCHIotNodeStepRequest:
      allOf:
        - type: object
          properties:
            setJson:
              type: object
              nullable: true
            removeJson:
              type: object
            removeAllJson:
              type: object
            setNodeName:
              type: string
              nullable: true
            removeNodeName:
              type: string
            removeAllNodeName:
              type: string
            setNodeType:
              type: string
              nullable: true
            removeNodeType:
              type: string
            removeAllNodeType:
              type: string
            setNodeId:
              type: string
              nullable: true
            removeNodeId:
              type: string
            removeAllNodeId:
              type: string
            setLocation:
              type: string
              nullable: true
            removeLocation:
              type: string
            removeAllLocation:
              type: string
            setJson_moisture:
              type: string
              nullable: true
            removeJson_moisture:
              type: string
            removeAllJson_moisture:
              type: string
            setJson_moisture0:
              type: string
              nullable: true
            removeJson_moisture0:
              type: string
            removeAllJson_moisture0:
              type: string
            setJson_moisture1:
              type: string
              nullable: true
            removeJson_moisture1:
              type: string
            removeAllJson_moisture1:
              type: string
            setJson_temperature:
              type: string
              nullable: true
            removeJson_temperature:
              type: string
            removeAllJson_temperature:
              type: string
            setJson_temperature0:
              type: string
              nullable: true
            removeJson_temperature0:
              type: string
            removeAllJson_temperature0:
              type: string
            setJson_temperatureAverage:
              type: string
              nullable: true
            removeJson_temperatureAverage:
              type: string
            removeAllJson_temperatureAverage:
              type: string
            setJson_badConditionsCounter:
              type: string
              nullable: true
            removeJson_badConditionsCounter:
              type: string
            removeAllJson_badConditionsCounter:
              type: string
            setJson_door:
              type: string
              nullable: true
            removeJson_door:
              type: string
            removeAllJson_door:
              type: string
            setJson_alarmDoor:
              type: boolean
              nullable: true
            removeJson_alarmDoor:
              type: boolean
            removeAllJson_alarmDoor:
              type: boolean
            setJson_flood:
              type: string
              nullable: true
            removeJson_flood:
              type: string
            removeAllJson_flood:
              type: string
            setJson_alarmFlood:
              type: boolean
              nullable: true
            removeJson_alarmFlood:
              type: boolean
            removeAllJson_alarmFlood:
              type: boolean
            setJson_lux2:
              type: string
              nullable: true
            removeJson_lux2:
              type: string
            removeAllJson_lux2:
              type: string
            setJson_illuminance:
              type: string
              nullable: true
            removeJson_illuminance:
              type: string
            removeAllJson_illuminance:
              type: string
            setJson_resistance0:
              type: string
              nullable: true
            removeJson_resistance0:
              type: string
            removeAllJson_resistance0:
              type: string
            setJson_resistance1:
              type: string
              nullable: true
            removeJson_resistance1:
              type: string
            removeAllJson_resistance1:
              type: string
            setJson_frequency:
              type: string
              nullable: true
            removeJson_frequency:
              type: string
            removeAllJson_frequency:
              type: string
            setJson_devEui:
              type: string
              nullable: true
            removeJson_devEui:
              type: string
            removeAllJson_devEui:
              type: string
            setJson_bandwidth:
              type: string
              nullable: true
            removeJson_bandwidth:
              type: string
            removeAllJson_bandwidth:
              type: string
            setJson_dataRate:
              type: string
              nullable: true
            removeJson_dataRate:
              type: string
            removeAllJson_dataRate:
              type: string
            setJson_frameCount:
              type: string
              nullable: true
            removeJson_frameCount:
              type: string
            removeAllJson_frameCount:
              type: string
            setJson_maxPayload:
              type: string
              nullable: true
            removeJson_maxPayload:
              type: string
            removeAllJson_maxPayload:
              type: string
            setJson_bitsPerSecond:
              type: string
              nullable: true
            removeJson_bitsPerSecond:
              type: string
            removeAllJson_bitsPerSecond:
              type: string
            setJson_batteryVoltage:
              type: string
              nullable: true
            removeJson_batteryVoltage:
              type: string
            removeAllJson_batteryVoltage:
              type: string
            setJson_spreadingFactor:
              type: string
              nullable: true
            removeJson_spreadingFactor:
              type: string
            removeAllJson_spreadingFactor:
              type: string
            setJson_dataRateAdaptive:
              type: boolean
              nullable: true
            removeJson_dataRateAdaptive:
              type: boolean
            removeAllJson_dataRateAdaptive:
              type: boolean
            setJson_swversion:
              type: string
              nullable: true
            removeJson_swversion:
              type: string
            removeAllJson_swversion:
              type: string
            setJson_batteryLevel:
              type: string
              nullable: true
            removeJson_batteryLevel:
              type: string
            removeAllJson_batteryLevel:
              type: string
            setJson_startUpCount:
              type: string
              nullable: true
            removeJson_startUpCount:
              type: string
            removeAllJson_startUpCount:
              type: string
            setJson_watchdogCount:
              type: string
              nullable: true
            removeJson_watchdogCount:
              type: string
            removeAllJson_watchdogCount:
              type: string
            setJson_historySequence:
              type: string
              nullable: true
            removeJson_historySequence:
              type: string
            removeAllJson_historySequence:
              type: string
            setJson_versionFirmware:
              type: string
              nullable: true
            removeJson_versionFirmware:
              type: string
            removeAllJson_versionFirmware:
              type: string
            setJson_stackTxFailRebootCount:
              type: string
              nullable: true
            removeJson_stackTxFailRebootCount:
              type: string
            removeAllJson_stackTxFailRebootCount:
              type: string
            setJson_historySequencePrevious:
              type: string
              nullable: true
            removeJson_historySequencePrevious:
              type: string
            removeAllJson_historySequencePrevious:
              type: string
            setJson_snr:
              type: string
              nullable: true
            removeJson_snr:
              type: string
            removeAllJson_snr:
              type: string
            setJson_rssi:
              type: string
              nullable: true
            removeJson_rssi:
              type: string
            removeAllJson_rssi:
              type: string
    PATCHIotNodeStepResponse:
      allOf:
        - type: object
          properties:
            setJson:
              type: object
              nullable: true
            removeJson:
              type: object
            removeAllJson:
              type: object
            setNodeName:
              type: string
              nullable: true
            removeNodeName:
              type: string
            removeAllNodeName:
              type: string
            setNodeType:
              type: string
              nullable: true
            removeNodeType:
              type: string
            removeAllNodeType:
              type: string
            setNodeId:
              type: string
              nullable: true
            removeNodeId:
              type: string
            removeAllNodeId:
              type: string
            setLocation:
              type: string
              nullable: true
            removeLocation:
              type: string
            removeAllLocation:
              type: string
            setJson_moisture:
              type: string
              nullable: true
            removeJson_moisture:
              type: string
            removeAllJson_moisture:
              type: string
            setJson_moisture0:
              type: string
              nullable: true
            removeJson_moisture0:
              type: string
            removeAllJson_moisture0:
              type: string
            setJson_moisture1:
              type: string
              nullable: true
            removeJson_moisture1:
              type: string
            removeAllJson_moisture1:
              type: string
            setJson_temperature:
              type: string
              nullable: true
            removeJson_temperature:
              type: string
            removeAllJson_temperature:
              type: string
            setJson_temperature0:
              type: string
              nullable: true
            removeJson_temperature0:
              type: string
            removeAllJson_temperature0:
              type: string
            setJson_temperatureAverage:
              type: string
              nullable: true
            removeJson_temperatureAverage:
              type: string
            removeAllJson_temperatureAverage:
              type: string
            setJson_badConditionsCounter:
              type: string
              nullable: true
            removeJson_badConditionsCounter:
              type: string
            removeAllJson_badConditionsCounter:
              type: string
            setJson_door:
              type: string
              nullable: true
            removeJson_door:
              type: string
            removeAllJson_door:
              type: string
            setJson_alarmDoor:
              type: boolean
              nullable: true
            removeJson_alarmDoor:
              type: boolean
            removeAllJson_alarmDoor:
              type: boolean
            setJson_flood:
              type: string
              nullable: true
            removeJson_flood:
              type: string
            removeAllJson_flood:
              type: string
            setJson_alarmFlood:
              type: boolean
              nullable: true
            removeJson_alarmFlood:
              type: boolean
            removeAllJson_alarmFlood:
              type: boolean
            setJson_lux2:
              type: string
              nullable: true
            removeJson_lux2:
              type: string
            removeAllJson_lux2:
              type: string
            setJson_illuminance:
              type: string
              nullable: true
            removeJson_illuminance:
              type: string
            removeAllJson_illuminance:
              type: string
            setJson_resistance0:
              type: string
              nullable: true
            removeJson_resistance0:
              type: string
            removeAllJson_resistance0:
              type: string
            setJson_resistance1:
              type: string
              nullable: true
            removeJson_resistance1:
              type: string
            removeAllJson_resistance1:
              type: string
            setJson_frequency:
              type: string
              nullable: true
            removeJson_frequency:
              type: string
            removeAllJson_frequency:
              type: string
            setJson_devEui:
              type: string
              nullable: true
            removeJson_devEui:
              type: string
            removeAllJson_devEui:
              type: string
            setJson_bandwidth:
              type: string
              nullable: true
            removeJson_bandwidth:
              type: string
            removeAllJson_bandwidth:
              type: string
            setJson_dataRate:
              type: string
              nullable: true
            removeJson_dataRate:
              type: string
            removeAllJson_dataRate:
              type: string
            setJson_frameCount:
              type: string
              nullable: true
            removeJson_frameCount:
              type: string
            removeAllJson_frameCount:
              type: string
            setJson_maxPayload:
              type: string
              nullable: true
            removeJson_maxPayload:
              type: string
            removeAllJson_maxPayload:
              type: string
            setJson_bitsPerSecond:
              type: string
              nullable: true
            removeJson_bitsPerSecond:
              type: string
            removeAllJson_bitsPerSecond:
              type: string
            setJson_batteryVoltage:
              type: string
              nullable: true
            removeJson_batteryVoltage:
              type: string
            removeAllJson_batteryVoltage:
              type: string
            setJson_spreadingFactor:
              type: string
              nullable: true
            removeJson_spreadingFactor:
              type: string
            removeAllJson_spreadingFactor:
              type: string
            setJson_dataRateAdaptive:
              type: boolean
              nullable: true
            removeJson_dataRateAdaptive:
              type: boolean
            removeAllJson_dataRateAdaptive:
              type: boolean
            setJson_swversion:
              type: string
              nullable: true
            removeJson_swversion:
              type: string
            removeAllJson_swversion:
              type: string
            setJson_batteryLevel:
              type: string
              nullable: true
            removeJson_batteryLevel:
              type: string
            removeAllJson_batteryLevel:
              type: string
            setJson_startUpCount:
              type: string
              nullable: true
            removeJson_startUpCount:
              type: string
            removeAllJson_startUpCount:
              type: string
            setJson_watchdogCount:
              type: string
              nullable: true
            removeJson_watchdogCount:
              type: string
            removeAllJson_watchdogCount:
              type: string
            setJson_historySequence:
              type: string
              nullable: true
            removeJson_historySequence:
              type: string
            removeAllJson_historySequence:
              type: string
            setJson_versionFirmware:
              type: string
              nullable: true
            removeJson_versionFirmware:
              type: string
            removeAllJson_versionFirmware:
              type: string
            setJson_stackTxFailRebootCount:
              type: string
              nullable: true
            removeJson_stackTxFailRebootCount:
              type: string
            removeAllJson_stackTxFailRebootCount:
              type: string
            setJson_historySequencePrevious:
              type: string
              nullable: true
            removeJson_historySequencePrevious:
              type: string
            removeAllJson_historySequencePrevious:
              type: string
            setJson_snr:
              type: string
              nullable: true
            removeJson_snr:
              type: string
            removeAllJson_snr:
              type: string
            setJson_rssi:
              type: string
              nullable: true
            removeJson_rssi:
              type: string
            removeAllJson_rssi:
              type: string
    POSTIotNodeStepRequest:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
            json_moisture:
              type: string
            json_moisture0:
              type: string
            json_moisture1:
              type: string
            json_temperature:
              type: string
            json_temperature0:
              type: string
            json_temperatureAverage:
              type: string
            json_badConditionsCounter:
              type: string
            json_door:
              type: string
            json_alarmDoor:
              type: boolean
            json_flood:
              type: string
            json_alarmFlood:
              type: boolean
            json_lux2:
              type: string
            json_illuminance:
              type: string
            json_resistance0:
              type: string
            json_resistance1:
              type: string
            json_frequency:
              type: string
            json_devEui:
              type: string
            json_bandwidth:
              type: string
            json_dataRate:
              type: string
            json_frameCount:
              type: string
            json_maxPayload:
              type: string
            json_bitsPerSecond:
              type: string
            json_batteryVoltage:
              type: string
            json_spreadingFactor:
              type: string
            json_dataRateAdaptive:
              type: boolean
            json_swversion:
              type: string
            json_batteryLevel:
              type: string
            json_startUpCount:
              type: string
            json_watchdogCount:
              type: string
            json_historySequence:
              type: string
            json_versionFirmware:
              type: string
            json_stackTxFailRebootCount:
              type: string
            json_historySequencePrevious:
              type: string
            json_snr:
              type: string
            json_rssi:
              type: string
    POSTIotNodeStepResponse:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
            json_moisture:
              type: string
            json_moisture0:
              type: string
            json_moisture1:
              type: string
            json_temperature:
              type: string
            json_temperature0:
              type: string
            json_temperatureAverage:
              type: string
            json_badConditionsCounter:
              type: string
            json_door:
              type: string
            json_alarmDoor:
              type: boolean
            json_flood:
              type: string
            json_alarmFlood:
              type: boolean
            json_lux2:
              type: string
            json_illuminance:
              type: string
            json_resistance0:
              type: string
            json_resistance1:
              type: string
            json_frequency:
              type: string
            json_devEui:
              type: string
            json_bandwidth:
              type: string
            json_dataRate:
              type: string
            json_frameCount:
              type: string
            json_maxPayload:
              type: string
            json_bitsPerSecond:
              type: string
            json_batteryVoltage:
              type: string
            json_spreadingFactor:
              type: string
            json_dataRateAdaptive:
              type: boolean
            json_swversion:
              type: string
            json_batteryLevel:
              type: string
            json_startUpCount:
              type: string
            json_watchdogCount:
              type: string
            json_historySequence:
              type: string
            json_versionFirmware:
              type: string
            json_stackTxFailRebootCount:
              type: string
            json_historySequencePrevious:
              type: string
            json_snr:
              type: string
            json_rssi:
              type: string
    PUTImportIotNodeStepRequest:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
            json_moisture:
              type: string
            json_moisture0:
              type: string
            json_moisture1:
              type: string
            json_temperature:
              type: string
            json_temperature0:
              type: string
            json_temperatureAverage:
              type: string
            json_badConditionsCounter:
              type: string
            json_door:
              type: string
            json_alarmDoor:
              type: boolean
            json_flood:
              type: string
            json_alarmFlood:
              type: boolean
            json_lux2:
              type: string
            json_illuminance:
              type: string
            json_resistance0:
              type: string
            json_resistance1:
              type: string
            json_frequency:
              type: string
            json_devEui:
              type: string
            json_bandwidth:
              type: string
            json_dataRate:
              type: string
            json_frameCount:
              type: string
            json_maxPayload:
              type: string
            json_bitsPerSecond:
              type: string
            json_batteryVoltage:
              type: string
            json_spreadingFactor:
              type: string
            json_dataRateAdaptive:
              type: boolean
            json_swversion:
              type: string
            json_batteryLevel:
              type: string
            json_startUpCount:
              type: string
            json_watchdogCount:
              type: string
            json_historySequence:
              type: string
            json_versionFirmware:
              type: string
            json_stackTxFailRebootCount:
              type: string
            json_historySequencePrevious:
              type: string
            json_snr:
              type: string
            json_rssi:
              type: string
    PUTImportIotNodeStepResponse:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
            json_moisture:
              type: string
            json_moisture0:
              type: string
            json_moisture1:
              type: string
            json_temperature:
              type: string
            json_temperature0:
              type: string
            json_temperatureAverage:
              type: string
            json_badConditionsCounter:
              type: string
            json_door:
              type: string
            json_alarmDoor:
              type: boolean
            json_flood:
              type: string
            json_alarmFlood:
              type: boolean
            json_lux2:
              type: string
            json_illuminance:
              type: string
            json_resistance0:
              type: string
            json_resistance1:
              type: string
            json_frequency:
              type: string
            json_devEui:
              type: string
            json_bandwidth:
              type: string
            json_dataRate:
              type: string
            json_frameCount:
              type: string
            json_maxPayload:
              type: string
            json_bitsPerSecond:
              type: string
            json_batteryVoltage:
              type: string
            json_spreadingFactor:
              type: string
            json_dataRateAdaptive:
              type: boolean
            json_swversion:
              type: string
            json_batteryLevel:
              type: string
            json_startUpCount:
              type: string
            json_watchdogCount:
              type: string
            json_historySequence:
              type: string
            json_versionFirmware:
              type: string
            json_stackTxFailRebootCount:
              type: string
            json_historySequencePrevious:
              type: string
            json_snr:
              type: string
            json_rssi:
              type: string
    GETIotNodeStepResponse:
      allOf:
        - type: object
          properties:
            json:
              type: object
            nodeName:
              type: string
            nodeType:
              type: string
            nodeId:
              type: string
            location:
              type: string
            json_moisture:
              type: string
            json_moisture0:
              type: string
            json_moisture1:
              type: string
            json_temperature:
              type: string
            json_temperature0:
              type: string
            json_temperatureAverage:
              type: string
            json_badConditionsCounter:
              type: string
            json_door:
              type: string
            json_alarmDoor:
              type: boolean
            json_flood:
              type: string
            json_alarmFlood:
              type: boolean
            json_lux2:
              type: string
            json_illuminance:
              type: string
            json_resistance0:
              type: string
            json_resistance1:
              type: string
            json_frequency:
              type: string
            json_devEui:
              type: string
            json_bandwidth:
              type: string
            json_dataRate:
              type: string
            json_frameCount:
              type: string
            json_maxPayload:
              type: string
            json_bitsPerSecond:
              type: string
            json_batteryVoltage:
              type: string
            json_spreadingFactor:
              type: string
            json_dataRateAdaptive:
              type: boolean
            json_swversion:
              type: string
            json_batteryLevel:
              type: string
            json_startUpCount:
              type: string
            json_watchdogCount:
              type: string
            json_historySequence:
              type: string
            json_versionFirmware:
              type: string
            json_stackTxFailRebootCount:
              type: string
            json_historySequencePrevious:
              type: string
            json_snr:
              type: string
            json_rssi:
              type: string
    SearchPageIotNodeStepResponse:
      allOf:
        - type: string
    SearchMapResultResponse:
      allOf:
        - type: object
          properties:
            startNum:
              type: integer
              minimum: 0
            foundNum:
              type: integer
              minimum: 0
            returnedNum:
              type: integer
              minimum: 0
            list:
              type: array
              items:
                type: object
                properties:
                  simulationName:
                    type: string
                  sumocfgPath:
                    type: string
                  simulationKey:
                    type: string
                  timeStepId:
                    type: string
                  time:
                    type: string
                  dateTime:
                    type: string
                    format: date-time
                  x:
                    type: string
                  y:
                    type: string
                  location:
                    type: string
                  color:
                    type: string
                  step:
                    type: boolean
    GETMapResultResponse:
      allOf:
        - type: object
          properties:
            simulationName:
              type: string
            sumocfgPath:
              type: string
            simulationKey:
              type: string
            timeStepId:
              type: string
            time:
              type: string
            dateTime:
              type: string
              format: date-time
            x:
              type: string
            y:
              type: string
            location:
              type: string
            color:
              type: string
            step:
              type: boolean
    SearchPageMapResultResponse:
      allOf:
        - type: string
