{
  "$schema" : "http://json-schema.org/schema#",
  "$schemaVersion" : "0.0.1",
  "modelTags" : "",
  "$id" : "https://raw.githubusercontent.com/computate-org/smartabyar-smartvillage-static/main/fiware/PhotovoltaicMeasurement/schema.json",
  "title" : "PhotovoltaicMeasurement",
  "description" : "ApiTag.enUS: PhotovoltaicMeasurement",
  "type" : "object",
  "allOf" : [ {
    "$ref" : "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
  }, {
    "$ref" : "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"
  } ],
  "required" : [ ],
  "properties" : {
    "activePower" : {
      "type" : "number",
      "description" : "Active Power,where phi is the phase shift of the current compared to the voltage. The unit code (text) is given using the UN/CEFACT_Common_Codes (max 3 characters). For instance, For instance, **KWT** represents Kilowatt"
    },
    "address" : {
      "type" : "object",
      "description" : "The mailing address"
    },
    "alternateName" : {
      "type" : "string",
      "description" : "An alternative name for this item"
    },
    "areaServed" : {
      "type" : "geo:linestring",
      "description" : "The geographic area where a service or offered item is provided"
    },
    "current" : {
      "type" : "number",
      "description" : "Electrical intensity of the current. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere"
    },
    "dataProvider" : {
      "type" : "string",
      "description" : "A sequence of characters identifying the provider of the harmonised data entity"
    },
    "dateCreated" : {
      "type" : "string",
      "description" : "Entity creation timestamp. This will usually be allocated by the storage platform"
    },
    "dateEnergyMeteringStarted" : {
      "type" : "string",
      "description" : "The starting date for metering energy in an ISO8601 UTC format"
    },
    "dateModified" : {
      "type" : "string",
      "description" : "Timestamp of the last modification of the entity. This will usually be allocated by the storage platform"
    },
    "dateObserved" : {
      "type" : "string",
      "description" : "Date of the observed entity defined by the user"
    },
    "dateObservedFrom" : {
      "type" : "string",
      "description" : "Observation period: Start date and time in an ISO8601 UTC format. The attribute can be used in addition to the 'dateObserved attribute when it corresponds to a time interval to be highlighted"
    },
    "dateObservedTo" : {
      "type" : "string",
      "description" : "Observation period: End date and time in an ISO8601 UTC format. The attribute can be used in addition to the 'dateObserved' attribute when it corresponds to a time interval to be highlighted"
    },
    "description" : {
      "type" : "string",
      "description" : "A description of this item"
    },
    "inverterStatus" : {
      "type" : "object",
      "description" : "Active Power,where phi is the phase shift of the current compared to the voltage. The unit code (text) is given using the UN/CEFACT_Common_Codes (max 3 characters). For instance, For instance, **KWT** represents Kilowatt. Enum:'00-On sector, 01-Power failure / On battery, 02-Loss of communication,  03-Battery fault, 04-System shutdown, 05-Tension dip, 06-Overvoltage, 07-Voltage drop, 08-Voltage increase, 09-Line noise, 10-Frequency variation, 11-Transient distortion, 12-Harmonic distortion'"
    },
    "location" : {
      "type" : "geo:point",
      "description" : "Geojson reference to the item. It can be Point, LineString, Polygon, MultiPoint, MultiLineString or MultiPolygon"
    },
    "name" : {
      "type" : "string",
      "description" : "The name of this item"
    },
    "nominalPeakPowerGeneration" : {
      "type" : "number",
      "description" : "nominalPeakPowerGeneration is a number. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **KWT** represents Kilowatt"
    },
    "owner" : {
      "type" : "object",
      "description" : "A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)"
    },
    "reactivePower" : {
      "type" : "number",
      "description" : "Reactive Power used by circuits. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **K5** represents kilovolt-ampere-reactive"
    },
    "refPhotovoltaicDevice" : {
      "type" : "object",
      "description" : "HtmRow: 9"
    },
    "refPointOfInterest" : {
      "type" : "object",
      "description" : "Reference to a [PointOfInterest](https://github.com/smart-data-models/dataModel.PointOfInterest/blob/master/PointOfInterest/doc/spec.md) linked with the Repository"
    },
    "seeAlso" : {
      "type" : "object",
      "description" : "list of uri pointing to additional resources about the item"
    },
    "source" : {
      "type" : "string",
      "description" : "A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object"
    },
    "temperature" : {
      "type" : "number",
      "description" : "Temperature recorded at the time of Observation compared to the  nominal reference temperature of the device. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CEL** represents Degree Celsius"
    },
    "entityId" : {
      "type" : "string",
      "description" : "A unique ID for this Smart Data Model"
    }
  }
}
